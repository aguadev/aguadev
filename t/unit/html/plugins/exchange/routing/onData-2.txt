socketioserver.sockets.on.data		msg: test
socketioserver.sockets.on.data		DOING connection.send(msg)
socketioserver.sockets.on.data		this.sequenceNumber: undefined
socketioserver.sockets.on.data		this:
{ this: 
   { _pause: true,
     _buffer: [],
     writable: false,
     readable: true,
     _advertisements: [],
     _subscriptions: { 'amq.gen-gKvEdVDsMuH-Akn9fVRKLh': [Object] },
     _connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        onend: null,
        destroyed: false,
        errorEmitted: false,
        bytesRead: 976,
        _bytesDispatched: 785,
        _pendingData: null,
        _pendingEncoding: '',
        options: [Object],
        implOptions: [Object],
        connectionAttemptScheduled: false,
        _defaultExchange: null,
        channelCounter: 6,
        _sendBuffer: <Buffer 01 00 05 00 00 00 0d 00 3c 00 28 00 00 04 63 68 61 74 00 00 ce 2d 67 4b 76 45 64 56 44 73 4d 75 48 2d 41 6b 6e 39 66 56 52 4b 4c 68 04 63 68 61 74 00 00 ...>,
        pipe: [Function],
        addListener: [Function],
        on: [Function],
        pause: [Function],
        resume: [Function],
        read: [Function],
        _consuming: true,
        channels: [Object],
        queues: [Object],
        exchanges: [Object],
        serverProperties: [Object],
        _outboundHeartbeatTimer: null,
        _inboundHeartbeatTimer: null },
     _encoding: 'utf8',
     _privateQueue: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        channel: 4,
        connection: [Object],
        _tasks: [],
        name: 'amq.gen-gKvEdVDsMuH-Akn9fVRKLh',
        consumerTagListeners: [Object],
        consumerTagOptions: [Object],
        options: [Object],
        _openCallback: null,
        state: 'open',
        exchange: [Object],
        currentMessage: [Object] } } }
   debug - websocket writing 3:::test
^Z
