PID: 1342 config.py:521 - DEBUG - Loading config
PID: 1342 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1342 shell.py:35 - INFO - Importing module config
PID: 1342 shell.py:35 - INFO - Importing module static
PID: 1342 shell.py:35 - INFO - Importing module cluster
PID: 1342 shell.py:35 - INFO - Importing module clustersetup
PID: 1342 shell.py:35 - INFO - Importing module node
PID: 1342 shell.py:35 - INFO - Importing module ssh
PID: 1342 shell.py:35 - INFO - Importing module plugins
PID: 1342 shell.py:35 - INFO - Importing module balancers
PID: 1342 shell.py:35 - INFO - Importing module managers
PID: 1342 shell.py:35 - INFO - Importing module image
PID: 1342 shell.py:35 - INFO - Importing module volume
PID: 1342 shell.py:35 - INFO - Importing module awsutils
PID: 1342 shell.py:35 - INFO - Importing module cli
PID: 1342 shell.py:35 - INFO - Importing module commands
PID: 1342 shell.py:35 - INFO - Importing module logger
PID: 1342 shell.py:35 - INFO - Importing module utils
PID: 1342 shell.py:35 - INFO - Importing module iptools
PID: 1342 shell.py:35 - INFO - Importing module threadpool
PID: 1342 shell.py:35 - INFO - Importing module templates
PID: 1342 shell.py:35 - INFO - Importing module exception
PID: 1342 shell.py:35 - INFO - Importing module tests
PID: 1342 shell.py:35 - INFO - Importing module optcomplete
PID: 1342 shell.py:35 - INFO - Importing module progressbar
PID: 1342 shell.py:35 - INFO - Importing module spinner
PID: 1342 shell.py:35 - INFO - Importing module boto
PID: 1342 shell.py:35 - INFO - Importing module paramiko
PID: 1342 utils.py:223 - ERROR - Unable to load IPython.
PID: 1342 utils.py:224 - ERROR - Please check that IPython is installed and working.
PID: 1342 utils.py:225 - ERROR - If not, you can install it via: easy_install ipython
PID: 1344 config.py:521 - DEBUG - Loading config
PID: 1344 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1344 shell.py:35 - INFO - Importing module config
PID: 1344 shell.py:35 - INFO - Importing module static
PID: 1344 shell.py:35 - INFO - Importing module cluster
PID: 1344 shell.py:35 - INFO - Importing module clustersetup
PID: 1344 shell.py:35 - INFO - Importing module node
PID: 1344 shell.py:35 - INFO - Importing module ssh
PID: 1344 shell.py:35 - INFO - Importing module plugins
PID: 1344 shell.py:35 - INFO - Importing module balancers
PID: 1344 shell.py:35 - INFO - Importing module managers
PID: 1344 shell.py:35 - INFO - Importing module image
PID: 1344 shell.py:35 - INFO - Importing module volume
PID: 1344 shell.py:35 - INFO - Importing module awsutils
PID: 1344 shell.py:35 - INFO - Importing module cli
PID: 1344 shell.py:35 - INFO - Importing module commands
PID: 1344 shell.py:35 - INFO - Importing module logger
PID: 1344 shell.py:35 - INFO - Importing module utils
PID: 1344 shell.py:35 - INFO - Importing module iptools
PID: 1344 shell.py:35 - INFO - Importing module threadpool
PID: 1344 shell.py:35 - INFO - Importing module templates
PID: 1344 shell.py:35 - INFO - Importing module exception
PID: 1344 shell.py:35 - INFO - Importing module tests
PID: 1344 shell.py:35 - INFO - Importing module optcomplete
PID: 1344 shell.py:35 - INFO - Importing module progressbar
PID: 1344 shell.py:35 - INFO - Importing module spinner
PID: 1344 shell.py:35 - INFO - Importing module boto
PID: 1344 shell.py:35 - INFO - Importing module paramiko
PID: 1344 utils.py:223 - ERROR - Unable to load IPython.
PID: 1344 utils.py:224 - ERROR - Please check that IPython is installed and working.
PID: 1344 utils.py:225 - ERROR - If not, you can install it via: easy_install ipython
PID: 1418 config.py:521 - DEBUG - Loading config
PID: 1418 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1418 shell.py:35 - INFO - Importing module config
PID: 1418 shell.py:35 - INFO - Importing module static
PID: 1418 shell.py:35 - INFO - Importing module cluster
PID: 1418 shell.py:35 - INFO - Importing module clustersetup
PID: 1418 shell.py:35 - INFO - Importing module node
PID: 1418 shell.py:35 - INFO - Importing module ssh
PID: 1418 shell.py:35 - INFO - Importing module plugins
PID: 1418 shell.py:35 - INFO - Importing module balancers
PID: 1418 shell.py:35 - INFO - Importing module managers
PID: 1418 shell.py:35 - INFO - Importing module image
PID: 1418 shell.py:35 - INFO - Importing module volume
PID: 1418 shell.py:35 - INFO - Importing module awsutils
PID: 1418 shell.py:35 - INFO - Importing module cli
PID: 1418 shell.py:35 - INFO - Importing module commands
PID: 1418 shell.py:35 - INFO - Importing module logger
PID: 1418 shell.py:35 - INFO - Importing module utils
PID: 1418 shell.py:35 - INFO - Importing module iptools
PID: 1418 shell.py:35 - INFO - Importing module threadpool
PID: 1418 shell.py:35 - INFO - Importing module templates
PID: 1418 shell.py:35 - INFO - Importing module exception
PID: 1418 shell.py:35 - INFO - Importing module tests
PID: 1418 shell.py:35 - INFO - Importing module optcomplete
PID: 1418 shell.py:35 - INFO - Importing module progressbar
PID: 1418 shell.py:35 - INFO - Importing module spinner
PID: 1418 shell.py:35 - INFO - Importing module boto
PID: 1418 shell.py:35 - INFO - Importing module paramiko
PID: 1418 utils.py:224 - ERROR - Unable to load IPython.
PID: 1418 utils.py:225 - ERROR - Please check that IPython is installed and working.
PID: 1418 utils.py:226 - ERROR - If not, you can install it via: easy_install ipython
PID: 1420 config.py:521 - DEBUG - Loading config
PID: 1420 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1420 shell.py:35 - INFO - Importing module config
PID: 1420 shell.py:35 - INFO - Importing module static
PID: 1420 shell.py:35 - INFO - Importing module cluster
PID: 1420 shell.py:35 - INFO - Importing module clustersetup
PID: 1420 shell.py:35 - INFO - Importing module node
PID: 1420 shell.py:35 - INFO - Importing module ssh
PID: 1420 shell.py:35 - INFO - Importing module plugins
PID: 1420 shell.py:35 - INFO - Importing module balancers
PID: 1420 shell.py:35 - INFO - Importing module managers
PID: 1420 shell.py:35 - INFO - Importing module image
PID: 1420 shell.py:35 - INFO - Importing module volume
PID: 1420 shell.py:35 - INFO - Importing module awsutils
PID: 1420 shell.py:35 - INFO - Importing module cli
PID: 1420 shell.py:35 - INFO - Importing module commands
PID: 1420 shell.py:35 - INFO - Importing module logger
PID: 1420 shell.py:35 - INFO - Importing module utils
PID: 1420 shell.py:35 - INFO - Importing module iptools
PID: 1420 shell.py:35 - INFO - Importing module threadpool
PID: 1420 shell.py:35 - INFO - Importing module templates
PID: 1420 shell.py:35 - INFO - Importing module exception
PID: 1420 shell.py:35 - INFO - Importing module tests
PID: 1420 shell.py:35 - INFO - Importing module optcomplete
PID: 1420 shell.py:35 - INFO - Importing module progressbar
PID: 1420 shell.py:35 - INFO - Importing module spinner
PID: 1420 shell.py:35 - INFO - Importing module boto
PID: 1420 shell.py:35 - INFO - Importing module paramiko
PID: 1420 utils.py:224 - ERROR - Unable to load IPython.
PID: 1420 utils.py:225 - ERROR - Please check that IPython is installed and working.
PID: 1420 utils.py:226 - ERROR - If not, you can install it via: easy_install ipython
PID: 1421 config.py:521 - DEBUG - Loading config
PID: 1421 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1421 shell.py:35 - INFO - Importing module config
PID: 1421 shell.py:35 - INFO - Importing module static
PID: 1421 shell.py:35 - INFO - Importing module cluster
PID: 1421 shell.py:35 - INFO - Importing module clustersetup
PID: 1421 shell.py:35 - INFO - Importing module node
PID: 1421 shell.py:35 - INFO - Importing module ssh
PID: 1421 shell.py:35 - INFO - Importing module plugins
PID: 1421 shell.py:35 - INFO - Importing module balancers
PID: 1421 shell.py:35 - INFO - Importing module managers
PID: 1421 shell.py:35 - INFO - Importing module image
PID: 1421 shell.py:35 - INFO - Importing module volume
PID: 1421 shell.py:35 - INFO - Importing module awsutils
PID: 1421 shell.py:35 - INFO - Importing module cli
PID: 1421 shell.py:35 - INFO - Importing module commands
PID: 1421 shell.py:35 - INFO - Importing module logger
PID: 1421 shell.py:35 - INFO - Importing module utils
PID: 1421 shell.py:35 - INFO - Importing module iptools
PID: 1421 shell.py:35 - INFO - Importing module threadpool
PID: 1421 shell.py:35 - INFO - Importing module templates
PID: 1421 shell.py:35 - INFO - Importing module exception
PID: 1421 shell.py:35 - INFO - Importing module tests
PID: 1421 shell.py:35 - INFO - Importing module optcomplete
PID: 1421 shell.py:35 - INFO - Importing module progressbar
PID: 1421 shell.py:35 - INFO - Importing module spinner
PID: 1421 shell.py:35 - INFO - Importing module boto
PID: 1421 shell.py:35 - INFO - Importing module paramiko
PID: 1421 utils.py:225 - ERROR - Unable to load IPython.
PID: 1421 utils.py:226 - ERROR - Please check that IPython is installed and working.
PID: 1421 utils.py:227 - ERROR - If not, you can install it via: easy_install ipython
PID: 1422 config.py:521 - DEBUG - Loading config
PID: 1422 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1422 shell.py:35 - INFO - Importing module config
PID: 1422 shell.py:35 - INFO - Importing module static
PID: 1422 shell.py:35 - INFO - Importing module cluster
PID: 1422 shell.py:35 - INFO - Importing module clustersetup
PID: 1422 shell.py:35 - INFO - Importing module node
PID: 1422 shell.py:35 - INFO - Importing module ssh
PID: 1422 shell.py:35 - INFO - Importing module plugins
PID: 1422 shell.py:35 - INFO - Importing module balancers
PID: 1422 shell.py:35 - INFO - Importing module managers
PID: 1422 shell.py:35 - INFO - Importing module image
PID: 1422 shell.py:35 - INFO - Importing module volume
PID: 1422 shell.py:35 - INFO - Importing module awsutils
PID: 1422 shell.py:35 - INFO - Importing module cli
PID: 1422 shell.py:35 - INFO - Importing module commands
PID: 1422 shell.py:35 - INFO - Importing module logger
PID: 1422 shell.py:35 - INFO - Importing module utils
PID: 1422 shell.py:35 - INFO - Importing module iptools
PID: 1422 shell.py:35 - INFO - Importing module threadpool
PID: 1422 shell.py:35 - INFO - Importing module templates
PID: 1422 shell.py:35 - INFO - Importing module exception
PID: 1422 shell.py:35 - INFO - Importing module tests
PID: 1422 shell.py:35 - INFO - Importing module optcomplete
PID: 1422 shell.py:35 - INFO - Importing module progressbar
PID: 1422 shell.py:35 - INFO - Importing module spinner
PID: 1422 shell.py:35 - INFO - Importing module boto
PID: 1422 shell.py:35 - INFO - Importing module paramiko
PID: 1422 utils.py:226 - ERROR - HERE
PID: 1422 utils.py:227 - ERROR - Unable to load IPython.
PID: 1422 utils.py:228 - ERROR - Please check that IPython is installed and working.
PID: 1422 utils.py:229 - ERROR - If not, you can install it via: easy_install ipython
PID: 1423 config.py:521 - DEBUG - Loading config
PID: 1423 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1423 shell.py:35 - INFO - Importing module config
PID: 1423 shell.py:35 - INFO - Importing module static
PID: 1423 shell.py:35 - INFO - Importing module cluster
PID: 1423 shell.py:35 - INFO - Importing module clustersetup
PID: 1423 shell.py:35 - INFO - Importing module node
PID: 1423 shell.py:35 - INFO - Importing module ssh
PID: 1423 shell.py:35 - INFO - Importing module plugins
PID: 1423 shell.py:35 - INFO - Importing module balancers
PID: 1423 shell.py:35 - INFO - Importing module managers
PID: 1423 shell.py:35 - INFO - Importing module image
PID: 1423 shell.py:35 - INFO - Importing module volume
PID: 1423 shell.py:35 - INFO - Importing module awsutils
PID: 1423 shell.py:35 - INFO - Importing module cli
PID: 1423 shell.py:35 - INFO - Importing module commands
PID: 1423 shell.py:35 - INFO - Importing module logger
PID: 1423 shell.py:35 - INFO - Importing module utils
PID: 1423 shell.py:35 - INFO - Importing module iptools
PID: 1423 shell.py:35 - INFO - Importing module threadpool
PID: 1423 shell.py:35 - INFO - Importing module templates
PID: 1423 shell.py:35 - INFO - Importing module exception
PID: 1423 shell.py:35 - INFO - Importing module tests
PID: 1423 shell.py:35 - INFO - Importing module optcomplete
PID: 1423 shell.py:35 - INFO - Importing module progressbar
PID: 1423 shell.py:35 - INFO - Importing module spinner
PID: 1423 shell.py:35 - INFO - Importing module boto
PID: 1423 shell.py:35 - INFO - Importing module paramiko
PID: 1423 utils.py:226 - ERROR - HERE
PID: 1423 utils.py:227 - ERROR - Unable to load IPython.
PID: 1423 utils.py:228 - ERROR - Please check that IPython is installed and working.
PID: 1423 utils.py:229 - ERROR - If not, you can install it via: easy_install ipython
PID: 1424 config.py:521 - DEBUG - Loading config
PID: 1424 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1424 shell.py:35 - INFO - Importing module config
PID: 1424 shell.py:35 - INFO - Importing module static
PID: 1424 shell.py:35 - INFO - Importing module cluster
PID: 1424 shell.py:35 - INFO - Importing module clustersetup
PID: 1424 shell.py:35 - INFO - Importing module node
PID: 1424 shell.py:35 - INFO - Importing module ssh
PID: 1424 shell.py:35 - INFO - Importing module plugins
PID: 1424 shell.py:35 - INFO - Importing module balancers
PID: 1424 shell.py:35 - INFO - Importing module managers
PID: 1424 shell.py:35 - INFO - Importing module image
PID: 1424 shell.py:35 - INFO - Importing module volume
PID: 1424 shell.py:35 - INFO - Importing module awsutils
PID: 1424 shell.py:35 - INFO - Importing module cli
PID: 1424 shell.py:35 - INFO - Importing module commands
PID: 1424 shell.py:35 - INFO - Importing module logger
PID: 1424 shell.py:35 - INFO - Importing module utils
PID: 1424 shell.py:35 - INFO - Importing module iptools
PID: 1424 shell.py:35 - INFO - Importing module threadpool
PID: 1424 shell.py:35 - INFO - Importing module templates
PID: 1424 shell.py:35 - INFO - Importing module exception
PID: 1424 shell.py:35 - INFO - Importing module tests
PID: 1424 shell.py:35 - INFO - Importing module optcomplete
PID: 1424 shell.py:35 - INFO - Importing module progressbar
PID: 1424 shell.py:35 - INFO - Importing module spinner
PID: 1424 shell.py:35 - INFO - Importing module boto
PID: 1424 shell.py:35 - INFO - Importing module paramiko
PID: 1424 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
AttributeError: 'module' object has no attribute 'ipy_shell'

PID: 1424 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1424 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1424 cli.py:143 - ERROR - Look for lines starting with PID: 1424
PID: 1424 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1424 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1429 config.py:521 - DEBUG - Loading config
PID: 1429 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1429 shell.py:35 - INFO - Importing module config
PID: 1429 shell.py:35 - INFO - Importing module static
PID: 1429 shell.py:35 - INFO - Importing module cluster
PID: 1429 shell.py:35 - INFO - Importing module clustersetup
PID: 1429 shell.py:35 - INFO - Importing module node
PID: 1429 shell.py:35 - INFO - Importing module ssh
PID: 1429 shell.py:35 - INFO - Importing module plugins
PID: 1429 shell.py:35 - INFO - Importing module balancers
PID: 1429 shell.py:35 - INFO - Importing module managers
PID: 1429 shell.py:35 - INFO - Importing module image
PID: 1429 shell.py:35 - INFO - Importing module volume
PID: 1429 shell.py:35 - INFO - Importing module awsutils
PID: 1429 shell.py:35 - INFO - Importing module cli
PID: 1429 shell.py:35 - INFO - Importing module commands
PID: 1429 shell.py:35 - INFO - Importing module logger
PID: 1429 shell.py:35 - INFO - Importing module utils
PID: 1429 shell.py:35 - INFO - Importing module iptools
PID: 1429 shell.py:35 - INFO - Importing module threadpool
PID: 1429 shell.py:35 - INFO - Importing module templates
PID: 1429 shell.py:35 - INFO - Importing module exception
PID: 1429 shell.py:35 - INFO - Importing module tests
PID: 1429 shell.py:35 - INFO - Importing module optcomplete
PID: 1429 shell.py:35 - INFO - Importing module progressbar
PID: 1429 shell.py:35 - INFO - Importing module spinner
PID: 1429 shell.py:35 - INFO - Importing module boto
PID: 1429 shell.py:35 - INFO - Importing module paramiko
PID: 1429 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
AttributeError: 'module' object has no attribute 'ipy_shell'

PID: 1429 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1429 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1429 cli.py:143 - ERROR - Look for lines starting with PID: 1429
PID: 1429 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1429 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1430 config.py:521 - DEBUG - Loading config
PID: 1430 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1430 shell.py:35 - INFO - Importing module config
PID: 1430 shell.py:35 - INFO - Importing module static
PID: 1430 shell.py:35 - INFO - Importing module cluster
PID: 1430 shell.py:35 - INFO - Importing module clustersetup
PID: 1430 shell.py:35 - INFO - Importing module node
PID: 1430 shell.py:35 - INFO - Importing module ssh
PID: 1430 shell.py:35 - INFO - Importing module plugins
PID: 1430 shell.py:35 - INFO - Importing module balancers
PID: 1430 shell.py:35 - INFO - Importing module managers
PID: 1430 shell.py:35 - INFO - Importing module image
PID: 1430 shell.py:35 - INFO - Importing module volume
PID: 1430 shell.py:35 - INFO - Importing module awsutils
PID: 1430 shell.py:35 - INFO - Importing module cli
PID: 1430 shell.py:35 - INFO - Importing module commands
PID: 1430 shell.py:35 - INFO - Importing module logger
PID: 1430 shell.py:35 - INFO - Importing module utils
PID: 1430 shell.py:35 - INFO - Importing module iptools
PID: 1430 shell.py:35 - INFO - Importing module threadpool
PID: 1430 shell.py:35 - INFO - Importing module templates
PID: 1430 shell.py:35 - INFO - Importing module exception
PID: 1430 shell.py:35 - INFO - Importing module tests
PID: 1430 shell.py:35 - INFO - Importing module optcomplete
PID: 1430 shell.py:35 - INFO - Importing module progressbar
PID: 1430 shell.py:35 - INFO - Importing module spinner
PID: 1430 shell.py:35 - INFO - Importing module boto
PID: 1430 shell.py:35 - INFO - Importing module paramiko
PID: 1430 utils.py:225 - ERROR - HERE
PID: 1430 utils.py:226 - ERROR - Unable to load IPython.
PID: 1430 utils.py:227 - ERROR - Please check that IPython is installed and working.
PID: 1430 utils.py:228 - ERROR - If not, you can install it via: easy_install ipython
PID: 1431 config.py:521 - DEBUG - Loading config
PID: 1431 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1431 shell.py:35 - INFO - Importing module config
PID: 1431 shell.py:35 - INFO - Importing module static
PID: 1431 shell.py:35 - INFO - Importing module cluster
PID: 1431 shell.py:35 - INFO - Importing module clustersetup
PID: 1431 shell.py:35 - INFO - Importing module node
PID: 1431 shell.py:35 - INFO - Importing module ssh
PID: 1431 shell.py:35 - INFO - Importing module plugins
PID: 1431 shell.py:35 - INFO - Importing module balancers
PID: 1431 shell.py:35 - INFO - Importing module managers
PID: 1431 shell.py:35 - INFO - Importing module image
PID: 1431 shell.py:35 - INFO - Importing module volume
PID: 1431 shell.py:35 - INFO - Importing module awsutils
PID: 1431 shell.py:35 - INFO - Importing module cli
PID: 1431 shell.py:35 - INFO - Importing module commands
PID: 1431 shell.py:35 - INFO - Importing module logger
PID: 1431 shell.py:35 - INFO - Importing module utils
PID: 1431 shell.py:35 - INFO - Importing module iptools
PID: 1431 shell.py:35 - INFO - Importing module threadpool
PID: 1431 shell.py:35 - INFO - Importing module templates
PID: 1431 shell.py:35 - INFO - Importing module exception
PID: 1431 shell.py:35 - INFO - Importing module tests
PID: 1431 shell.py:35 - INFO - Importing module optcomplete
PID: 1431 shell.py:35 - INFO - Importing module progressbar
PID: 1431 shell.py:35 - INFO - Importing module spinner
PID: 1431 shell.py:35 - INFO - Importing module boto
PID: 1431 shell.py:35 - INFO - Importing module paramiko
PID: 1431 utils.py:225 - ERROR - HERE
PID: 1431 utils.py:226 - ERROR - Unable to load IPython.
PID: 1431 utils.py:227 - ERROR - Please check that IPython is installed and working.
PID: 1431 utils.py:228 - ERROR - If not, you can install it via: easy_install ipython
PID: 1432 config.py:521 - DEBUG - Loading config
PID: 1432 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1432 shell.py:35 - INFO - Importing module config
PID: 1432 shell.py:35 - INFO - Importing module static
PID: 1432 shell.py:35 - INFO - Importing module cluster
PID: 1432 shell.py:35 - INFO - Importing module clustersetup
PID: 1432 shell.py:35 - INFO - Importing module node
PID: 1432 shell.py:35 - INFO - Importing module ssh
PID: 1432 shell.py:35 - INFO - Importing module plugins
PID: 1432 shell.py:35 - INFO - Importing module balancers
PID: 1432 shell.py:35 - INFO - Importing module managers
PID: 1432 shell.py:35 - INFO - Importing module image
PID: 1432 shell.py:35 - INFO - Importing module volume
PID: 1432 shell.py:35 - INFO - Importing module awsutils
PID: 1432 shell.py:35 - INFO - Importing module cli
PID: 1432 shell.py:35 - INFO - Importing module commands
PID: 1432 shell.py:35 - INFO - Importing module logger
PID: 1432 shell.py:35 - INFO - Importing module utils
PID: 1432 shell.py:35 - INFO - Importing module iptools
PID: 1432 shell.py:35 - INFO - Importing module threadpool
PID: 1432 shell.py:35 - INFO - Importing module templates
PID: 1432 shell.py:35 - INFO - Importing module exception
PID: 1432 shell.py:35 - INFO - Importing module tests
PID: 1432 shell.py:35 - INFO - Importing module optcomplete
PID: 1432 shell.py:35 - INFO - Importing module progressbar
PID: 1432 shell.py:35 - INFO - Importing module spinner
PID: 1432 shell.py:35 - INFO - Importing module boto
PID: 1432 shell.py:35 - INFO - Importing module paramiko
PID: 1432 utils.py:227 - ERROR - Unable to load IPython.
PID: 1432 utils.py:228 - ERROR - Please check that IPython is installed and working.
PID: 1432 utils.py:229 - ERROR - If not, you can install it via: easy_install ipython
PID: 1433 config.py:521 - DEBUG - Loading config
PID: 1433 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1433 shell.py:35 - INFO - Importing module config
PID: 1433 shell.py:35 - INFO - Importing module static
PID: 1433 shell.py:35 - INFO - Importing module cluster
PID: 1433 shell.py:35 - INFO - Importing module clustersetup
PID: 1433 shell.py:35 - INFO - Importing module node
PID: 1433 shell.py:35 - INFO - Importing module ssh
PID: 1433 shell.py:35 - INFO - Importing module plugins
PID: 1433 shell.py:35 - INFO - Importing module balancers
PID: 1433 shell.py:35 - INFO - Importing module managers
PID: 1433 shell.py:35 - INFO - Importing module image
PID: 1433 shell.py:35 - INFO - Importing module volume
PID: 1433 shell.py:35 - INFO - Importing module awsutils
PID: 1433 shell.py:35 - INFO - Importing module cli
PID: 1433 shell.py:35 - INFO - Importing module commands
PID: 1433 shell.py:35 - INFO - Importing module logger
PID: 1433 shell.py:35 - INFO - Importing module utils
PID: 1433 shell.py:35 - INFO - Importing module iptools
PID: 1433 shell.py:35 - INFO - Importing module threadpool
PID: 1433 shell.py:35 - INFO - Importing module templates
PID: 1433 shell.py:35 - INFO - Importing module exception
PID: 1433 shell.py:35 - INFO - Importing module tests
PID: 1433 shell.py:35 - INFO - Importing module optcomplete
PID: 1433 shell.py:35 - INFO - Importing module progressbar
PID: 1433 shell.py:35 - INFO - Importing module spinner
PID: 1433 shell.py:35 - INFO - Importing module boto
PID: 1433 shell.py:35 - INFO - Importing module paramiko
PID: 1433 utils.py:227 - ERROR - Unable to load IPython.
PID: 1433 utils.py:228 - ERROR - Please check that IPython is installed and working.
PID: 1433 utils.py:229 - ERROR - If not, you can install it via: easy_install ipython
PID: 1609 config.py:521 - DEBUG - Loading config
PID: 1609 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1609 shell.py:35 - INFO - Importing module config
PID: 1609 shell.py:35 - INFO - Importing module static
PID: 1609 shell.py:35 - INFO - Importing module cluster
PID: 1609 shell.py:35 - INFO - Importing module clustersetup
PID: 1609 shell.py:35 - INFO - Importing module node
PID: 1609 shell.py:35 - INFO - Importing module ssh
PID: 1609 shell.py:35 - INFO - Importing module plugins
PID: 1609 shell.py:35 - INFO - Importing module balancers
PID: 1609 shell.py:35 - INFO - Importing module managers
PID: 1609 shell.py:35 - INFO - Importing module image
PID: 1609 shell.py:35 - INFO - Importing module volume
PID: 1609 shell.py:35 - INFO - Importing module awsutils
PID: 1609 shell.py:35 - INFO - Importing module cli
PID: 1609 shell.py:35 - INFO - Importing module commands
PID: 1609 shell.py:35 - INFO - Importing module logger
PID: 1609 shell.py:35 - INFO - Importing module utils
PID: 1609 shell.py:35 - INFO - Importing module iptools
PID: 1609 shell.py:35 - INFO - Importing module threadpool
PID: 1609 shell.py:35 - INFO - Importing module templates
PID: 1609 shell.py:35 - INFO - Importing module exception
PID: 1609 shell.py:35 - INFO - Importing module tests
PID: 1609 shell.py:35 - INFO - Importing module optcomplete
PID: 1609 shell.py:35 - INFO - Importing module progressbar
PID: 1609 shell.py:35 - INFO - Importing module spinner
PID: 1609 shell.py:35 - INFO - Importing module boto
PID: 1609 shell.py:35 - INFO - Importing module paramiko
PID: 1609 utils.py:228 - ERROR - Unable to load IPython.
PID: 1609 utils.py:229 - ERROR - Please check that IPython is installed and working.
PID: 1609 utils.py:230 - ERROR - If not, you can install it via: easy_install ipython
PID: 1611 config.py:521 - DEBUG - Loading config
PID: 1611 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1611 shell.py:35 - INFO - Importing module config
PID: 1611 shell.py:35 - INFO - Importing module static
PID: 1611 shell.py:35 - INFO - Importing module cluster
PID: 1611 shell.py:35 - INFO - Importing module clustersetup
PID: 1611 shell.py:35 - INFO - Importing module node
PID: 1611 shell.py:35 - INFO - Importing module ssh
PID: 1611 shell.py:35 - INFO - Importing module plugins
PID: 1611 shell.py:35 - INFO - Importing module balancers
PID: 1611 shell.py:35 - INFO - Importing module managers
PID: 1611 shell.py:35 - INFO - Importing module image
PID: 1611 shell.py:35 - INFO - Importing module volume
PID: 1611 shell.py:35 - INFO - Importing module awsutils
PID: 1611 shell.py:35 - INFO - Importing module cli
PID: 1611 shell.py:35 - INFO - Importing module commands
PID: 1611 shell.py:35 - INFO - Importing module logger
PID: 1611 shell.py:35 - INFO - Importing module utils
PID: 1611 shell.py:35 - INFO - Importing module iptools
PID: 1611 shell.py:35 - INFO - Importing module threadpool
PID: 1611 shell.py:35 - INFO - Importing module templates
PID: 1611 shell.py:35 - INFO - Importing module exception
PID: 1611 shell.py:35 - INFO - Importing module tests
PID: 1611 shell.py:35 - INFO - Importing module optcomplete
PID: 1611 shell.py:35 - INFO - Importing module progressbar
PID: 1611 shell.py:35 - INFO - Importing module spinner
PID: 1611 shell.py:35 - INFO - Importing module boto
PID: 1611 shell.py:35 - INFO - Importing module paramiko
PID: 1611 utils.py:228 - ERROR - Unable to load IPython.
PID: 1611 utils.py:229 - ERROR - Please check that IPython is installed and working.
PID: 1611 utils.py:230 - ERROR - If not, you can install it via: easy_install ipython
PID: 1612 config.py:521 - DEBUG - Loading config
PID: 1612 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1612 shell.py:35 - INFO - Importing module config
PID: 1612 shell.py:35 - INFO - Importing module static
PID: 1612 shell.py:35 - INFO - Importing module cluster
PID: 1612 shell.py:35 - INFO - Importing module clustersetup
PID: 1612 shell.py:35 - INFO - Importing module node
PID: 1612 shell.py:35 - INFO - Importing module ssh
PID: 1612 shell.py:35 - INFO - Importing module plugins
PID: 1612 shell.py:35 - INFO - Importing module balancers
PID: 1612 shell.py:35 - INFO - Importing module managers
PID: 1612 shell.py:35 - INFO - Importing module image
PID: 1612 shell.py:35 - INFO - Importing module volume
PID: 1612 shell.py:35 - INFO - Importing module awsutils
PID: 1612 shell.py:35 - INFO - Importing module cli
PID: 1612 shell.py:35 - INFO - Importing module commands
PID: 1612 shell.py:35 - INFO - Importing module logger
PID: 1612 shell.py:35 - INFO - Importing module utils
PID: 1612 shell.py:35 - INFO - Importing module iptools
PID: 1612 shell.py:35 - INFO - Importing module threadpool
PID: 1612 shell.py:35 - INFO - Importing module templates
PID: 1612 shell.py:35 - INFO - Importing module exception
PID: 1612 shell.py:35 - INFO - Importing module tests
PID: 1612 shell.py:35 - INFO - Importing module optcomplete
PID: 1612 shell.py:35 - INFO - Importing module progressbar
PID: 1612 shell.py:35 - INFO - Importing module spinner
PID: 1612 shell.py:35 - INFO - Importing module boto
PID: 1612 shell.py:35 - INFO - Importing module paramiko
PID: 1612 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'NoneType' object is not callable

PID: 1612 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1612 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1612 cli.py:143 - ERROR - Look for lines starting with PID: 1612
PID: 1612 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1612 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1630 config.py:521 - DEBUG - Loading config
PID: 1630 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1630 shell.py:35 - INFO - Importing module config
PID: 1630 shell.py:35 - INFO - Importing module static
PID: 1630 shell.py:35 - INFO - Importing module cluster
PID: 1630 shell.py:35 - INFO - Importing module clustersetup
PID: 1630 shell.py:35 - INFO - Importing module node
PID: 1630 shell.py:35 - INFO - Importing module ssh
PID: 1630 shell.py:35 - INFO - Importing module plugins
PID: 1630 shell.py:35 - INFO - Importing module balancers
PID: 1630 shell.py:35 - INFO - Importing module managers
PID: 1630 shell.py:35 - INFO - Importing module image
PID: 1630 shell.py:35 - INFO - Importing module volume
PID: 1630 shell.py:35 - INFO - Importing module awsutils
PID: 1630 shell.py:35 - INFO - Importing module cli
PID: 1630 shell.py:35 - INFO - Importing module commands
PID: 1630 shell.py:35 - INFO - Importing module logger
PID: 1630 shell.py:35 - INFO - Importing module utils
PID: 1630 shell.py:35 - INFO - Importing module iptools
PID: 1630 shell.py:35 - INFO - Importing module threadpool
PID: 1630 shell.py:35 - INFO - Importing module templates
PID: 1630 shell.py:35 - INFO - Importing module exception
PID: 1630 shell.py:35 - INFO - Importing module tests
PID: 1630 shell.py:35 - INFO - Importing module optcomplete
PID: 1630 shell.py:35 - INFO - Importing module progressbar
PID: 1630 shell.py:35 - INFO - Importing module spinner
PID: 1630 shell.py:35 - INFO - Importing module boto
PID: 1630 shell.py:35 - INFO - Importing module paramiko
PID: 1630 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'NoneType' object is not callable

PID: 1630 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1630 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1630 cli.py:143 - ERROR - Look for lines starting with PID: 1630
PID: 1630 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1630 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1658 config.py:521 - DEBUG - Loading config
PID: 1658 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1658 shell.py:35 - INFO - Importing module config
PID: 1658 shell.py:35 - INFO - Importing module static
PID: 1658 shell.py:35 - INFO - Importing module cluster
PID: 1658 shell.py:35 - INFO - Importing module clustersetup
PID: 1658 shell.py:35 - INFO - Importing module node
PID: 1658 shell.py:35 - INFO - Importing module ssh
PID: 1658 shell.py:35 - INFO - Importing module plugins
PID: 1658 shell.py:35 - INFO - Importing module balancers
PID: 1658 shell.py:35 - INFO - Importing module managers
PID: 1658 shell.py:35 - INFO - Importing module image
PID: 1658 shell.py:35 - INFO - Importing module volume
PID: 1658 shell.py:35 - INFO - Importing module awsutils
PID: 1658 shell.py:35 - INFO - Importing module cli
PID: 1658 shell.py:35 - INFO - Importing module commands
PID: 1658 shell.py:35 - INFO - Importing module logger
PID: 1658 shell.py:35 - INFO - Importing module utils
PID: 1658 shell.py:35 - INFO - Importing module iptools
PID: 1658 shell.py:35 - INFO - Importing module threadpool
PID: 1658 shell.py:35 - INFO - Importing module templates
PID: 1658 shell.py:35 - INFO - Importing module exception
PID: 1658 shell.py:35 - INFO - Importing module tests
PID: 1658 shell.py:35 - INFO - Importing module optcomplete
PID: 1658 shell.py:35 - INFO - Importing module progressbar
PID: 1658 shell.py:35 - INFO - Importing module spinner
PID: 1658 shell.py:35 - INFO - Importing module boto
PID: 1658 shell.py:35 - INFO - Importing module paramiko
PID: 1658 utils.py:234 - ERROR - Unable to load IPython.
PID: 1658 utils.py:235 - ERROR - Please check that IPython is installed and working.
PID: 1658 utils.py:236 - ERROR - If not, you can install it via: easy_install ipython
PID: 1662 config.py:521 - DEBUG - Loading config
PID: 1662 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1662 shell.py:35 - INFO - Importing module config
PID: 1662 shell.py:35 - INFO - Importing module static
PID: 1662 shell.py:35 - INFO - Importing module cluster
PID: 1662 shell.py:35 - INFO - Importing module clustersetup
PID: 1662 shell.py:35 - INFO - Importing module node
PID: 1662 shell.py:35 - INFO - Importing module ssh
PID: 1662 shell.py:35 - INFO - Importing module plugins
PID: 1662 shell.py:35 - INFO - Importing module balancers
PID: 1662 shell.py:35 - INFO - Importing module managers
PID: 1662 shell.py:35 - INFO - Importing module image
PID: 1662 shell.py:35 - INFO - Importing module volume
PID: 1662 shell.py:35 - INFO - Importing module awsutils
PID: 1662 shell.py:35 - INFO - Importing module cli
PID: 1662 shell.py:35 - INFO - Importing module commands
PID: 1662 shell.py:35 - INFO - Importing module logger
PID: 1662 shell.py:35 - INFO - Importing module utils
PID: 1662 shell.py:35 - INFO - Importing module iptools
PID: 1662 shell.py:35 - INFO - Importing module threadpool
PID: 1662 shell.py:35 - INFO - Importing module templates
PID: 1662 shell.py:35 - INFO - Importing module exception
PID: 1662 shell.py:35 - INFO - Importing module tests
PID: 1662 shell.py:35 - INFO - Importing module optcomplete
PID: 1662 shell.py:35 - INFO - Importing module progressbar
PID: 1662 shell.py:35 - INFO - Importing module spinner
PID: 1662 shell.py:35 - INFO - Importing module boto
PID: 1662 shell.py:35 - INFO - Importing module paramiko
PID: 1662 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'InteractiveShell' object is not callable

PID: 1662 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1662 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1662 cli.py:143 - ERROR - Look for lines starting with PID: 1662
PID: 1662 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1662 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1673 config.py:521 - DEBUG - Loading config
PID: 1673 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1673 shell.py:35 - INFO - Importing module config
PID: 1673 shell.py:35 - INFO - Importing module static
PID: 1673 shell.py:35 - INFO - Importing module cluster
PID: 1673 shell.py:35 - INFO - Importing module clustersetup
PID: 1673 shell.py:35 - INFO - Importing module node
PID: 1673 shell.py:35 - INFO - Importing module ssh
PID: 1673 shell.py:35 - INFO - Importing module plugins
PID: 1673 shell.py:35 - INFO - Importing module balancers
PID: 1673 shell.py:35 - INFO - Importing module managers
PID: 1673 shell.py:35 - INFO - Importing module image
PID: 1673 shell.py:35 - INFO - Importing module volume
PID: 1673 shell.py:35 - INFO - Importing module awsutils
PID: 1673 shell.py:35 - INFO - Importing module cli
PID: 1673 shell.py:35 - INFO - Importing module commands
PID: 1673 shell.py:35 - INFO - Importing module logger
PID: 1673 shell.py:35 - INFO - Importing module utils
PID: 1673 shell.py:35 - INFO - Importing module iptools
PID: 1673 shell.py:35 - INFO - Importing module threadpool
PID: 1673 shell.py:35 - INFO - Importing module templates
PID: 1673 shell.py:35 - INFO - Importing module exception
PID: 1673 shell.py:35 - INFO - Importing module tests
PID: 1673 shell.py:35 - INFO - Importing module optcomplete
PID: 1673 shell.py:35 - INFO - Importing module progressbar
PID: 1673 shell.py:35 - INFO - Importing module spinner
PID: 1673 shell.py:35 - INFO - Importing module boto
PID: 1673 shell.py:35 - INFO - Importing module paramiko
PID: 1673 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'InteractiveShell' object is not callable

PID: 1673 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1673 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1673 cli.py:143 - ERROR - Look for lines starting with PID: 1673
PID: 1673 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1673 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1722 config.py:521 - DEBUG - Loading config
PID: 1722 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1722 shell.py:35 - INFO - Importing module config
PID: 1722 shell.py:35 - INFO - Importing module static
PID: 1722 shell.py:35 - INFO - Importing module cluster
PID: 1722 shell.py:35 - INFO - Importing module clustersetup
PID: 1722 shell.py:35 - INFO - Importing module node
PID: 1722 shell.py:35 - INFO - Importing module ssh
PID: 1722 shell.py:35 - INFO - Importing module plugins
PID: 1722 shell.py:35 - INFO - Importing module balancers
PID: 1722 shell.py:35 - INFO - Importing module managers
PID: 1722 shell.py:35 - INFO - Importing module image
PID: 1722 shell.py:35 - INFO - Importing module volume
PID: 1722 shell.py:35 - INFO - Importing module awsutils
PID: 1722 shell.py:35 - INFO - Importing module cli
PID: 1722 shell.py:35 - INFO - Importing module commands
PID: 1722 shell.py:35 - INFO - Importing module logger
PID: 1722 shell.py:35 - INFO - Importing module utils
PID: 1722 shell.py:35 - INFO - Importing module iptools
PID: 1722 shell.py:35 - INFO - Importing module threadpool
PID: 1722 shell.py:35 - INFO - Importing module templates
PID: 1722 shell.py:35 - INFO - Importing module exception
PID: 1722 shell.py:35 - INFO - Importing module tests
PID: 1722 shell.py:35 - INFO - Importing module optcomplete
PID: 1722 shell.py:35 - INFO - Importing module progressbar
PID: 1722 shell.py:35 - INFO - Importing module spinner
PID: 1722 shell.py:35 - INFO - Importing module boto
PID: 1722 shell.py:35 - INFO - Importing module paramiko
PID: 1722 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'InteractiveShell' object is not callable

PID: 1722 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 1722 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 1722 cli.py:143 - ERROR - Look for lines starting with PID: 1722
PID: 1722 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 1722 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 1755 config.py:521 - DEBUG - Loading config
PID: 1755 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 1755 shell.py:35 - INFO - Importing module config
PID: 1755 shell.py:35 - INFO - Importing module static
PID: 1755 shell.py:35 - INFO - Importing module cluster
PID: 1755 shell.py:35 - INFO - Importing module clustersetup
PID: 1755 shell.py:35 - INFO - Importing module node
PID: 1755 shell.py:35 - INFO - Importing module ssh
PID: 1755 shell.py:35 - INFO - Importing module plugins
PID: 1755 shell.py:35 - INFO - Importing module balancers
PID: 1755 shell.py:35 - INFO - Importing module managers
PID: 1755 shell.py:35 - INFO - Importing module image
PID: 1755 shell.py:35 - INFO - Importing module volume
PID: 1755 shell.py:35 - INFO - Importing module awsutils
PID: 1755 shell.py:35 - INFO - Importing module cli
PID: 1755 shell.py:35 - INFO - Importing module commands
PID: 1755 shell.py:35 - INFO - Importing module logger
PID: 1755 shell.py:35 - INFO - Importing module utils
PID: 1755 shell.py:35 - INFO - Importing module iptools
PID: 1755 shell.py:35 - INFO - Importing module threadpool
PID: 1755 shell.py:35 - INFO - Importing module templates
PID: 1755 shell.py:35 - INFO - Importing module exception
PID: 1755 shell.py:35 - INFO - Importing module tests
PID: 1755 shell.py:35 - INFO - Importing module optcomplete
PID: 1755 shell.py:35 - INFO - Importing module progressbar
PID: 1755 shell.py:35 - INFO - Importing module spinner
PID: 1755 shell.py:35 - INFO - Importing module boto
PID: 1755 shell.py:35 - INFO - Importing module paramiko
PID: 1755 utils.py:240 - ERROR - Unable to load IPython.
PID: 1755 utils.py:241 - ERROR - Please check that IPython is installed and working.
PID: 1755 utils.py:242 - ERROR - If not, you can install it via: easy_install ipython
PID: 2167 config.py:521 - DEBUG - Loading config
PID: 2167 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2167 shell.py:35 - INFO - Importing module config
PID: 2167 shell.py:35 - INFO - Importing module static
PID: 2167 shell.py:35 - INFO - Importing module cluster
PID: 2167 shell.py:35 - INFO - Importing module clustersetup
PID: 2167 shell.py:35 - INFO - Importing module node
PID: 2167 shell.py:35 - INFO - Importing module ssh
PID: 2167 shell.py:35 - INFO - Importing module plugins
PID: 2167 shell.py:35 - INFO - Importing module balancers
PID: 2167 shell.py:35 - INFO - Importing module managers
PID: 2167 shell.py:35 - INFO - Importing module image
PID: 2167 shell.py:35 - INFO - Importing module volume
PID: 2167 shell.py:35 - INFO - Importing module awsutils
PID: 2167 shell.py:35 - INFO - Importing module cli
PID: 2167 shell.py:35 - INFO - Importing module commands
PID: 2167 shell.py:35 - INFO - Importing module logger
PID: 2167 shell.py:35 - INFO - Importing module utils
PID: 2167 shell.py:35 - INFO - Importing module iptools
PID: 2167 shell.py:35 - INFO - Importing module threadpool
PID: 2167 shell.py:35 - INFO - Importing module templates
PID: 2167 shell.py:35 - INFO - Importing module exception
PID: 2167 shell.py:35 - INFO - Importing module tests
PID: 2167 shell.py:35 - INFO - Importing module optcomplete
PID: 2167 shell.py:35 - INFO - Importing module progressbar
PID: 2167 shell.py:35 - INFO - Importing module spinner
PID: 2167 shell.py:35 - INFO - Importing module boto
PID: 2167 shell.py:35 - INFO - Importing module paramiko
PID: 2167 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'NoneType' object is not callable

PID: 2167 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 2167 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 2167 cli.py:143 - ERROR - Look for lines starting with PID: 2167
PID: 2167 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 2167 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 2193 config.py:521 - DEBUG - Loading config
PID: 2193 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2193 shell.py:35 - INFO - Importing module config
PID: 2193 shell.py:35 - INFO - Importing module static
PID: 2193 shell.py:35 - INFO - Importing module cluster
PID: 2193 shell.py:35 - INFO - Importing module clustersetup
PID: 2193 shell.py:35 - INFO - Importing module node
PID: 2193 shell.py:35 - INFO - Importing module ssh
PID: 2193 shell.py:35 - INFO - Importing module plugins
PID: 2193 shell.py:35 - INFO - Importing module balancers
PID: 2193 shell.py:35 - INFO - Importing module managers
PID: 2193 shell.py:35 - INFO - Importing module image
PID: 2193 shell.py:35 - INFO - Importing module volume
PID: 2193 shell.py:35 - INFO - Importing module awsutils
PID: 2193 shell.py:35 - INFO - Importing module cli
PID: 2193 shell.py:35 - INFO - Importing module commands
PID: 2193 shell.py:35 - INFO - Importing module logger
PID: 2193 shell.py:35 - INFO - Importing module utils
PID: 2193 shell.py:35 - INFO - Importing module iptools
PID: 2193 shell.py:35 - INFO - Importing module threadpool
PID: 2193 shell.py:35 - INFO - Importing module templates
PID: 2193 shell.py:35 - INFO - Importing module exception
PID: 2193 shell.py:35 - INFO - Importing module tests
PID: 2193 shell.py:35 - INFO - Importing module optcomplete
PID: 2193 shell.py:35 - INFO - Importing module progressbar
PID: 2193 shell.py:35 - INFO - Importing module spinner
PID: 2193 shell.py:35 - INFO - Importing module boto
PID: 2193 shell.py:35 - INFO - Importing module paramiko
PID: 2193 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/shell.py", line 41, in execute
    utils.ipy_shell(local_ns=local_ns)
TypeError: 'NoneType' object is not callable

PID: 2193 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 2193 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 2193 cli.py:143 - ERROR - Look for lines starting with PID: 2193
PID: 2193 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 2193 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 2215 config.py:521 - DEBUG - Loading config
PID: 2215 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2215 shell.py:35 - INFO - Importing module config
PID: 2215 shell.py:35 - INFO - Importing module static
PID: 2215 shell.py:35 - INFO - Importing module cluster
PID: 2215 shell.py:35 - INFO - Importing module clustersetup
PID: 2215 shell.py:35 - INFO - Importing module node
PID: 2215 shell.py:35 - INFO - Importing module ssh
PID: 2215 shell.py:35 - INFO - Importing module plugins
PID: 2215 shell.py:35 - INFO - Importing module balancers
PID: 2215 shell.py:35 - INFO - Importing module managers
PID: 2215 shell.py:35 - INFO - Importing module image
PID: 2215 shell.py:35 - INFO - Importing module volume
PID: 2215 shell.py:35 - INFO - Importing module awsutils
PID: 2215 shell.py:35 - INFO - Importing module cli
PID: 2215 shell.py:35 - INFO - Importing module commands
PID: 2215 shell.py:35 - INFO - Importing module logger
PID: 2215 shell.py:35 - INFO - Importing module utils
PID: 2215 shell.py:35 - INFO - Importing module iptools
PID: 2215 shell.py:35 - INFO - Importing module threadpool
PID: 2215 shell.py:35 - INFO - Importing module templates
PID: 2215 shell.py:35 - INFO - Importing module exception
PID: 2215 shell.py:35 - INFO - Importing module tests
PID: 2215 shell.py:35 - INFO - Importing module optcomplete
PID: 2215 shell.py:35 - INFO - Importing module progressbar
PID: 2215 shell.py:35 - INFO - Importing module spinner
PID: 2215 shell.py:35 - INFO - Importing module boto
PID: 2215 shell.py:35 - INFO - Importing module paramiko
PID: 2215 utils.py:240 - ERROR - Unable to load IPython.
PID: 2215 utils.py:241 - ERROR - Please check that IPython is installed and working.
PID: 2215 utils.py:242 - ERROR - If not, you can install it via: easy_install ipython
PID: 2538 config.py:521 - DEBUG - Loading config
PID: 2538 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2538 start.py:48 - INFO - 0.92.rc2    XXXXX commands.start.addopts    utils.config_file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2538 config.py:521 - DEBUG - Loading config
PID: 2538 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2538 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 2538 start.py:176 - INFO - Using default cluster template: admin-microcluster
PID: 2538 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 2538 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2538 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2538 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2538 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 2538 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2538 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 2538 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 2538 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2538 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2538 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 2538 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 2538 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 2538 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 2538 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 2538 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 2538 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 2538 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 2538 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2538 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2538 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2538 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 2538 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2538 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 2538 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 2538 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2538 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2538 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 2538 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 2538 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 2538 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 2538 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 2538 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 2538 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 2538 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2538 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2538 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2538 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 2538 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2538 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 2538 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 2538 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 2538 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2538 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2538 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 2538 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 2538 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 2538 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 2538 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 2538 cluster.py:1333 - INFO - Validating cluster template settings...
PID: 2538 cluster.py:1355 - INFO - Cluster template settings are valid
PID: 2538 cluster.py:1228 - INFO - Starting cluster...
PID: 2538 cluster.py:891 - INFO - Launching a 1-node cluster...
PID: 2538 cluster.py:908 - INFO - Launching a 1-node cluster...
PID: 2538 cluster.py:919 - DEBUG - Launching master (ami: ami-c6a877af, type: t1.micro)
PID: 2538 awsutils.py:175 - INFO - Creating security group @sc-admin-microcluster...
PID: 2538 cluster.py:1048 - INFO - Waiting for cluster to come up... (updating every 30s)
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2538 cluster.py:678 - DEBUG - adding node i-50b7222a to self._nodes list
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 cluster.py:1070 - INFO - Waiting for all nodes to be in a 'running' state...
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 cluster.py:1081 - INFO - Waiting for SSH to come up on all nodes...
PID: 2538 ssh.py:61 - DEBUG - loading private key /nethome/admin/.starcluster/id_rsa-admin-key
PID: 2538 ssh.py:145 - DEBUG - Using private key /nethome/admin/.starcluster/id_rsa-admin-key (rsa)
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2538 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2538 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2538 ssh.py:82 - DEBUG - connecting to host ec2-184-72-75-54.compute-1.amazonaws.com on port 22 as user root
PID: 2538 cli.py:187 - ERROR - Request to start cluster 'admin-microcluster' was cancelled

Please be aware that instances may still be running.
You can check this from the output of:

   $ starcluster listclusters

If you wish to destroy these instances please run:

   $ starcluster stop admin-microcluster

You can then use:

   $ starcluster listinstances

to verify that the instances have been terminated.

Another option is to use the AWS management console
to terminate the instances manually.

If you would like to re-use these instances, rerun
the same start command with the --no-create option
PID: 2538 ssh.py:536 - DEBUG - __del__ called
PID: 2785 config.py:521 - DEBUG - Loading config
PID: 2785 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2785 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 2785 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 2785 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2785 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2785 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2785 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 2785 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2785 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 2785 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 2785 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2785 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2785 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 2785 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 2785 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 2785 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 2785 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 2785 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 2785 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 2785 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 2785 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2785 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2785 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2785 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 2785 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2785 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 2785 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 2785 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2785 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2785 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 2785 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 2785 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 2785 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 2785 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 2785 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 2785 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 2785 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2785 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2785 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2785 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 2785 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2785 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 2785 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 2785 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 2785 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2785 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2785 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 2785 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 2785 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 2785 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 2785 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2785 cluster.py:678 - DEBUG - adding node i-50b7222a to self._nodes list
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2785 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 cluster.py:1300 - INFO - Running plugin startup
PID: 2785 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin startup
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2785 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 cluster.py:1300 - INFO - Running plugin sge
PID: 2785 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin sge
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2785 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 cluster.py:1300 - INFO - Running plugin automount
PID: 2785 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin automount
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2785 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 cluster.py:670 - DEBUG - existing nodes: {u'i-50b7222a': <Node: master (i-50b7222a)>}
PID: 2785 cluster.py:673 - DEBUG - updating existing node i-50b7222a in self._nodes
PID: 2785 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-50b7222a)>]
PID: 2785 node.py:745 - INFO - Terminating node: master (i-50b7222a)
PID: 2785 cluster.py:1196 - INFO - Removing @sc-admin-microcluster security group
PID: 2785 cli.py:174 - ERROR - InvalidGroup.InUse: There are active instances using security group '@sc-admin-microcluster'
PID: 2801 config.py:521 - DEBUG - Loading config
PID: 2801 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2801 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 2801 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 2801 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2801 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2801 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2801 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 2801 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2801 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 2801 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 2801 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2801 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2801 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 2801 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 2801 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 2801 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 2801 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 2801 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 2801 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 2801 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 2801 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2801 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2801 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2801 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 2801 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2801 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 2801 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 2801 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2801 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2801 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 2801 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 2801 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 2801 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 2801 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 2801 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 2801 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 2801 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2801 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2801 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2801 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 2801 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2801 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 2801 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 2801 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 2801 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2801 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2801 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 2801 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 2801 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 2801 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 2801 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:1300 - INFO - Running plugin startup
PID: 2801 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin startup
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:1300 - INFO - Running plugin sge
PID: 2801 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin sge
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:1300 - INFO - Running plugin automount
PID: 2801 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin automount
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2801 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2801 cluster.py:1196 - INFO - Removing @sc-admin-microcluster security group
PID: 2803 config.py:521 - DEBUG - Loading config
PID: 2803 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2803 start.py:48 - INFO - 0.92.rc2    XXXXX commands.start.addopts    utils.config_file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2803 config.py:521 - DEBUG - Loading config
PID: 2803 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 2803 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 2803 start.py:176 - INFO - Using default cluster template: admin-microcluster
PID: 2803 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 2803 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2803 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2803 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2803 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 2803 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2803 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 2803 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 2803 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2803 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2803 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 2803 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 2803 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 2803 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 2803 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 2803 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 2803 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 2803 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 2803 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2803 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2803 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2803 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 2803 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2803 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 2803 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 2803 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2803 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2803 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 2803 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 2803 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 2803 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 2803 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 2803 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 2803 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 2803 cluster.py:443 - DEBUG - plugin varargs = None
PID: 2803 cluster.py:444 - DEBUG - plugin keywords = None
PID: 2803 cluster.py:445 - DEBUG - plugin defaults = None
PID: 2803 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 2803 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 2803 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 2803 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 2803 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 2803 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 2803 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 2803 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 2803 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 2803 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 2803 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 2803 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 2803 cluster.py:1333 - INFO - Validating cluster template settings...
PID: 2803 cluster.py:1355 - INFO - Cluster template settings are valid
PID: 2803 cluster.py:1228 - INFO - Starting cluster...
PID: 2803 cluster.py:891 - INFO - Launching a 1-node cluster...
PID: 2803 cluster.py:908 - INFO - Launching a 1-node cluster...
PID: 2803 cluster.py:919 - DEBUG - Launching master (ami: ami-c6a877af, type: t1.micro)
PID: 2803 awsutils.py:175 - INFO - Creating security group @sc-admin-microcluster...
PID: 2803 cluster.py:1048 - INFO - Waiting for cluster to come up... (updating every 30s)
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2803 cluster.py:678 - DEBUG - adding node i-c6f460bc to self._nodes list
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 cluster.py:1070 - INFO - Waiting for all nodes to be in a 'running' state...
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 cluster.py:1081 - INFO - Waiting for SSH to come up on all nodes...
PID: 2803 ssh.py:61 - DEBUG - loading private key /nethome/admin/.starcluster/id_rsa-admin-key
PID: 2803 ssh.py:145 - DEBUG - Using private key /nethome/admin/.starcluster/id_rsa-admin-key (rsa)
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {u'i-c6f460bc': <Node: master (i-c6f460bc)>}
PID: 2803 cluster.py:673 - DEBUG - updating existing node i-c6f460bc in self._nodes
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-c6f460bc)>]
PID: 2803 ssh.py:82 - DEBUG - connecting to host ec2-23-22-97-137.compute-1.amazonaws.com on port 22 as user root
PID: 2803 cluster.py:670 - DEBUG - existing nodes: {}
PID: 2803 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 2803 cli.py:194 - DEBUG - Traceback (most recent call last):
  File "/data/starcluster/0.92rc2/starcluster/cli.py", line 172, in main
    sc.execute(args)
  File "/data/starcluster/0.92rc2/starcluster/commands/start.py", line 204, in execute
    scluster.start(create=create, create_only=create_only, validate=False)
  File "/data/starcluster/0.92rc2/starcluster/cluster.py", line 1219, in start
    return self._start(create, create_only)
  File "/data/starcluster/0.92rc2/starcluster/utils.py", line 69, in wrap_f
    res = func(*arg, **kargs)
  File "/data/starcluster/0.92rc2/starcluster/cluster.py", line 1237, in _start
    self._setup_cluster()
  File "/data/starcluster/0.92rc2/starcluster/cluster.py", line 1251, in _setup_cluster
    self.wait_for_cluster()
  File "/data/starcluster/0.92rc2/starcluster/cluster.py", line 1087, in wait_for_cluster
    pbar.update(len(active_nodes))
  File "/data/starcluster/0.92rc2/starcluster/progressbar.py", line 312, in update
    self.prev_percentage = self.percentage()
  File "/data/starcluster/0.92rc2/starcluster/progressbar.py", line 261, in percentage
    return self.currval * 100.0 / self.maxval
ZeroDivisionError: float division

PID: 2803 cli.py:141 - ERROR - Oops! Looks like you've found a bug in StarCluster
PID: 2803 cli.py:142 - ERROR - Debug file written to: /tmp/starcluster-debug-root.log
PID: 2803 cli.py:143 - ERROR - Look for lines starting with PID: 2803
PID: 2803 cli.py:144 - ERROR - Please submit this file, minus any private information,
PID: 2803 cli.py:145 - ERROR - to starcluster@mit.edu
PID: 2803 ssh.py:536 - DEBUG - __del__ called
PID: 4158 config.py:521 - DEBUG - Loading config
PID: 4158 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4158 start.py:48 - INFO - 0.92.rc2    XXXXX commands.start.addopts    utils.config_file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4158 config.py:521 - DEBUG - Loading config
PID: 4158 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4158 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 4158 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 4158 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4158 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4158 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4158 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 4158 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4158 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 4158 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 4158 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4158 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4158 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 4158 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 4158 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 4158 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 4158 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 4158 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 4158 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 4158 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 4158 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4158 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4158 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4158 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 4158 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4158 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 4158 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 4158 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4158 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4158 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 4158 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 4158 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 4158 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 4158 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 4158 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 4158 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 4158 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4158 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4158 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4158 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 4158 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4158 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 4158 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 4158 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 4158 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4158 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4158 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 4158 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 4158 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 4158 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 4158 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 4158 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4158 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4158 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4158 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4158 cli.py:187 - ERROR - Cluster with tag name admin-microcluster already exists.

If you want to reconfigure the existing instances use the 'restart' command:

  $ starcluster restart admin-microcluster

This will reboot all of the instances and configure the cluster starting from scratch.

Otherwise either choose a different tag name, or terminate the existing cluster using:

  $ starcluster terminate admin-microcluster


PID: 4159 config.py:521 - DEBUG - Loading config
PID: 4159 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4159 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 4159 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 4159 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4159 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4159 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4159 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 4159 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4159 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 4159 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 4159 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4159 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4159 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 4159 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 4159 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 4159 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 4159 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 4159 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 4159 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 4159 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 4159 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4159 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4159 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4159 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 4159 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4159 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 4159 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 4159 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4159 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4159 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 4159 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 4159 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 4159 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 4159 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 4159 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 4159 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 4159 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4159 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4159 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4159 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 4159 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4159 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 4159 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 4159 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 4159 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4159 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4159 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 4159 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 4159 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 4159 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 4159 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:1300 - INFO - Running plugin startup
PID: 4159 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin startup
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:1300 - INFO - Running plugin sge
PID: 4159 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin sge
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:1300 - INFO - Running plugin automount
PID: 4159 cluster.py:1304 - DEBUG - method on_shutdown not implemented by plugin automount
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4159 cluster.py:686 - DEBUG - returning self._nodes = []
PID: 4159 cluster.py:1196 - INFO - Removing @sc-admin-microcluster security group
PID: 4160 config.py:521 - DEBUG - Loading config
PID: 4160 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4160 start.py:48 - INFO - 0.92.rc2    XXXXX commands.start.addopts    utils.config_file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4160 config.py:521 - DEBUG - Loading config
PID: 4160 config.py:114 - DEBUG - Loading file: /nethome/admin/.starcluster/admin-microcluster.config
PID: 4160 awsutils.py:54 - DEBUG - creating self._conn w/ connection_authenticator kwargs = {'path': '/', 'region': None, 'port': None, 'is_secure': True}
PID: 4160 start.py:176 - INFO - Using default cluster template: admin-microcluster
PID: 4160 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'interval', 'sourcedirs', 'mountpoints', 'portmapport', 'nfsport', 'mountdport', 'cluster']
PID: 4160 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4160 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4160 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4160 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', '30', '/agua,/data,/nethome', '/agua,/data,/nethome', '111', '2049', '32767', 'admin-microcluster']
PID: 4160 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4160 automount.py:18 - INFO - Loaded plugin: automount.NfsShares
PID: 4160 automount.py:19 - DEBUG - automount.NfsShares.__init__    Initialising AutoMount plugin.
PID: 4160 automount.py:20 - DEBUG - automount.NfsShares.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4160 automount.py:21 - DEBUG - automount.NfsShares.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4160 automount.py:22 - DEBUG - automount.NfsShares.__init__    interval 30
PID: 4160 automount.py:23 - DEBUG - automount.NfsShares.__init__    sourcedirs /agua,/data,/nethome
PID: 4160 automount.py:24 - DEBUG - automount.NfsShares.__init__    mountpoints /agua,/data,/nethome
PID: 4160 automount.py:25 - DEBUG - automount.NfsShares.__init__    portmapport 111
PID: 4160 automount.py:26 - DEBUG - automount.NfsShares.__init__    nfsport 2049
PID: 4160 automount.py:27 - DEBUG - automount.NfsShares.__init__    mountdport 32767
PID: 4160 automount.py:28 - DEBUG - automount.NfsShares.__init__    cluster admin-microcluster
PID: 4160 cluster.py:442 - DEBUG - plugin args = ['self', 'privatekey', 'publiccert', 'cell', 'execdport', 'qmasterport', 'root', 'slots']
PID: 4160 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4160 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4160 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4160 cluster.py:462 - DEBUG - config_args = ['/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '36352', '36351', '/opt/sge6', '1']
PID: 4160 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4160 sge.py:34 - INFO - Loaded plugin: sge.CreateCell
PID: 4160 sge.py:36 - DEBUG - sge.CreateCell.__init__    Initialising CreateCell plugin.
PID: 4160 sge.py:37 - DEBUG - sge.CreateCell.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4160 sge.py:38 - DEBUG - sge.CreateCell.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4160 sge.py:39 - DEBUG - sge.CreateCell.__init__    cell admin-microcluster
PID: 4160 sge.py:40 - DEBUG - sge.CreateCell.__init__    execdport 36352
PID: 4160 sge.py:41 - DEBUG - sge.CreateCell.__init__    qmasterport 36351
PID: 4160 sge.py:42 - DEBUG - sge.CreateCell.__init__    root /opt/sge6
PID: 4160 sge.py:43 - DEBUG - sge.CreateCell.__init__    slots 1
PID: 4160 sge.py:57 - INFO - rootpath: /opt/sge6/bin/lx24-amd64
PID: 4160 cluster.py:442 - DEBUG - plugin args = ['self', 'root', 'privatekey', 'publiccert', 'cell', 'installdir', 'headnodeid', 'version']
PID: 4160 cluster.py:443 - DEBUG - plugin varargs = None
PID: 4160 cluster.py:444 - DEBUG - plugin keywords = None
PID: 4160 cluster.py:445 - DEBUG - plugin defaults = None
PID: 4160 cluster.py:462 - DEBUG - config_args = ['/agua', '/agua/conf/.ec2/admin/private.pem', '/agua/conf/.ec2/admin/public.pem', 'admin-microcluster', '/agua', 'i-b34d25d2', '0.8.0-alpha.1+build20']
PID: 4160 cluster.py:463 - DEBUG - config_kwargs = {}
PID: 4160 startup.py:26 - INFO - Loaded plugin: startup.StartUp
PID: 4160 startup.py:28 - DEBUG - StartUp.__init__    Initialising StartUp plugin.
PID: 4160 startup.py:29 - DEBUG - StartUp.__init__    root /agua
PID: 4160 startup.py:30 - DEBUG - StartUp.__init__    privatekey /agua/conf/.ec2/admin/private.pem
PID: 4160 startup.py:31 - DEBUG - StartUp.__init__    publiccert /agua/conf/.ec2/admin/public.pem
PID: 4160 startup.py:32 - DEBUG - StartUp.__init__    cell admin-microcluster
PID: 4160 startup.py:33 - DEBUG - StartUp.__init__    installdir /agua
PID: 4160 startup.py:34 - DEBUG - StartUp.__init__    headnodeid i-b34d25d2
PID: 4160 startup.py:35 - DEBUG - StartUp.__init__    version 0.8.0-alpha.1+build20
PID: 4160 startup.py:39 - DEBUG - StartUp.__init__    self.resetdir /reset
PID: 4160 cluster.py:1333 - INFO - Validating cluster template settings...
PID: 4160 cluster.py:1355 - INFO - Cluster template settings are valid
PID: 4160 cluster.py:1228 - INFO - Starting cluster...
PID: 4160 cluster.py:891 - INFO - Launching a 1-node cluster...
PID: 4160 cluster.py:908 - INFO - Launching a 1-node cluster...
PID: 4160 cluster.py:919 - DEBUG - Launching master (ami: ami-c6a877af, type: t1.micro)
PID: 4160 awsutils.py:175 - INFO - Creating security group @sc-admin-microcluster...
PID: 4160 cluster.py:1048 - INFO - Waiting for cluster to come up... (updating every 30s)
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {}
PID: 4160 cluster.py:678 - DEBUG - adding node i-fcb92e86 to self._nodes list
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 cluster.py:1070 - INFO - Waiting for all nodes to be in a 'running' state...
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 cluster.py:1081 - INFO - Waiting for SSH to come up on all nodes...
PID: 4160 ssh.py:61 - DEBUG - loading private key /nethome/admin/.starcluster/id_rsa-admin-key
PID: 4160 ssh.py:145 - DEBUG - Using private key /nethome/admin/.starcluster/id_rsa-admin-key (rsa)
PID: 4160 ssh.py:82 - DEBUG - connecting to host ec2-50-17-167-214.compute-1.amazonaws.com on port 22 as user root
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 ssh.py:82 - DEBUG - connecting to host ec2-50-17-167-214.compute-1.amazonaws.com on port 22 as user root
PID: 4160 cluster.py:1252 - INFO - The master node is ec2-50-17-167-214.compute-1.amazonaws.com
PID: 4160 cluster.py:1253 - INFO - Setting up the cluster...
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 clustersetup.py:96 - INFO - Configuring hostnames...
PID: 4160 threadpool.py:108 - DEBUG - unfinished_tasks = 1
PID: 4160 ssh.py:164 - DEBUG - creating sftp connection
PID: 4160 clustersetup.py:144 - INFO - Creating cluster user: sgeadmin (uid: 1001, gid: 1001)
PID: 4160 threadpool.py:108 - DEBUG - unfinished_tasks = 1
PID: 4160 clustersetup.py:161 - DEBUG - user sgeadmin does not exist, creating...
PID: 4160 clustersetup.py:186 - INFO - Configuring scratch space for user: sgeadmin
PID: 4160 threadpool.py:108 - DEBUG - unfinished_tasks = 1
PID: 4160 clustersetup.py:195 - INFO - Configuring /etc/hosts on each node
PID: 4160 threadpool.py:108 - DEBUG - unfinished_tasks = 1
PID: 4160 ssh.py:254 - DEBUG - new /etc/hosts after removing regex (master) matches:
127.0.0.1 ubuntu

# The following lines are desirable for IPv6 capable hosts
::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
# Added by cloud-init
127.0.1.1	ip-10-127-106-176.ec2.internal ip-10-127-106-176

PID: 4160 clustersetup.py:314 - INFO - Configuring NFS...
PID: 4160 ssh.py:405 - DEBUG - Rather than invoking init scripts through /etc/init.d, use the service(8)
PID: 4160 ssh.py:405 - DEBUG - utility, e.g. service portmap start
PID: 4160 ssh.py:405 - DEBUG - 
PID: 4160 ssh.py:405 - DEBUG - Since the script you are attempting to invoke has been converted to an
PID: 4160 ssh.py:405 - DEBUG - Upstart job, you may also use the start(8) utility, e.g. start portmap
PID: 4160 ssh.py:402 - DEBUG - command mount -t rpc_pipefs sunrpc /var/lib/nfs/rpc_pipefs/ failed with status 32
PID: 4160 ssh.py:405 - DEBUG - mount: unknown filesystem type 'rpc_pipefs'
PID: 4160 ssh.py:405 - DEBUG - * Exporting directories for NFS kernel daemon...
PID: 4160 ssh.py:405 - DEBUG - ...done.
PID: 4160 ssh.py:405 - DEBUG - * Starting NFS kernel daemon
PID: 4160 ssh.py:405 - DEBUG - ...done.
PID: 4160 ssh.py:405 - DEBUG - exportfs: scandir /etc/exports.d: No such file or directory
PID: 4160 ssh.py:405 - DEBUG - 
PID: 4160 ssh.py:405 - DEBUG - exportfs: scandir /etc/exports.d: No such file or directory
PID: 4160 ssh.py:405 - DEBUG - 
PID: 4160 ssh.py:405 - DEBUG - exportfs: scandir /etc/exports.d: No such file or directory
PID: 4160 ssh.py:405 - DEBUG - 
PID: 4160 utils.py:61 - INFO - _setup_nfs took 0.361 mins
PID: 4160 clustersetup.py:207 - INFO - Configuring passwordless ssh for root
PID: 4160 node.py:396 - DEBUG - adding auth_key_contents
PID: 4160 ssh.py:250 - DEBUG - no regex supplied...returning
PID: 4160 clustersetup.py:215 - INFO - Configuring passwordless ssh for sgeadmin
PID: 4160 node.py:396 - DEBUG - adding auth_key_contents
PID: 4160 node.py:404 - DEBUG - adding conn_pubkey_contents
PID: 4160 ssh.py:402 - DEBUG - command pkill -9 sge failed with status 1
PID: 4160 ssh.py:402 - DEBUG - command rm /etc/init.d/sge* failed with status 1
PID: 4160 ssh.py:405 - DEBUG - rm: cannot remove `/etc/init.d/sge*': No such file or directory
PID: 4160 ssh.py:405 - DEBUG - linux-x64
PID: 4160 clustersetup.py:360 - INFO - Installing Sun Grid Engine...
PID: 4160 ssh.py:405 - DEBUG - Reading configuration from file ./ec2_sge.conf
PID: 4160 ssh.py:405 - DEBUG - [H[2JInstall log can be found in: /opt/sge6/default/common/install_logs/qmaster_install_master_2012-09-08_06:31:42.log
PID: 4160 ssh.py:405 - DEBUG - Install log can be found in: /opt/sge6/default/common/install_logs/execd_install_master_2012-09-08_06:31:45.log
PID: 4160 clustersetup.py:368 - INFO - Doing mconn.execute('qconf -mattr queue shell '/bin/bash' all.q')
PID: 4160 ssh.py:399 - ERROR - command 'qconf -mattr queue shell "/bin/bash" all.q' failed with status 127
PID: 4160 ssh.py:405 - DEBUG - bash: qconf: command not found
PID: 4160 ssh.py:405 - DEBUG - 1
PID: 4160 clustersetup.py:391 - INFO - Doing mconn.execute('qconf -Ap s' /tmp/pe.txt parallel_environment.name)
PID: 4160 ssh.py:399 - ERROR - command 'qconf -Ap /tmp/pe.txt' failed with status 127
PID: 4160 ssh.py:405 - DEBUG - bash: qconf: command not found
PID: 4160 clustersetup.py:393 - INFO - Doing mconn.execute('qconf -mattr queue pe_list 'orte' all.q')
PID: 4160 ssh.py:399 - ERROR - command 'qconf -mattr queue pe_list "orte" all.q' failed with status 127
PID: 4160 ssh.py:405 - DEBUG - bash: qconf: command not found
PID: 4160 threadpool.py:96 - INFO - Shutting down threads...
PID: 4160 threadpool.py:108 - DEBUG - unfinished_tasks = 0
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 cluster.py:1300 - INFO - Running plugin automount
PID: 4160 automount.py:56 - INFO - Running plugin: automount.NfsShares
PID: 4160 automount.py:57 - DEBUG - automount.NfsShares.run    automount.NfsShares.run(nodes, master, user, user_shell, volumes)
PID: 4160 automount.py:88 - INFO - automount.openNfsPorts    automount.openNfsPorts(group)
PID: 4160 automount.py:89 - DEBUG - automount.openNfsPorts    group; default
PID: 4160 automount.py:90 - DEBUG - automount.openNfsPorts    portmapport; 111
PID: 4160 automount.py:91 - DEBUG - automount.openNfsPorts    nfsport; 2049
PID: 4160 automount.py:92 - DEBUG - automount.openNfsPorts    mountdport; 32767
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2dgrp default
PID: 4160 automount.py:110 - INFO - automount.NfsSheares.setPortCommands    groupPermissions: ['PERMISSION\t728213020069\tdefault\tALLOWS\ticmp\t-1\t-1\tFROM\tUSER\t728213020069\tNAME default\tID sg-2925d740\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t0\t65535\tFROM\tUSER\t728213020069\tNAME default\tID sg-2925d740\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t0\t65535\tFROM\tUSER\t728213020069\tNAME default\tID sg-2925d740\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t22\t22\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t80\t80\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t111\t111\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t443\t443\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t2049\t2049\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t8443\t8443\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t8773\t8773\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t32767\t32767\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t36331\t36331\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t36332\t36332\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t36341\t36341\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\ttcp\t36342\t36342\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t111\t111\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t443\t443\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t2049\t2049\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t32767\t32767\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t36331\t36331\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t36332\t36332\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t36341\t36341\tFROM\tCIDR\t0.0.0.0/0\tingress', 'PERMISSION\t728213020069\tdefault\tALLOWS\tudp\t36342\t36342\tFROM\tCIDR\t0.0.0.0/0\tingress', '']
PID: 4160 automount.py:132 - INFO - Filtering permissions to exclude existing permissions
PID: 4160 automount.py:88 - INFO - automount.openNfsPorts    automount.openNfsPorts(group)
PID: 4160 automount.py:89 - DEBUG - automount.openNfsPorts    group; @sc-admin-microcluster
PID: 4160 automount.py:90 - DEBUG - automount.openNfsPorts    portmapport; 111
PID: 4160 automount.py:91 - DEBUG - automount.openNfsPorts    nfsport; 2049
PID: 4160 automount.py:92 - DEBUG - automount.openNfsPorts    mountdport; 32767
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2dgrp @sc-admin-microcluster
PID: 4160 automount.py:110 - INFO - automount.NfsSheares.setPortCommands    groupPermissions: ['PERMISSION\t728213020069\t@sc-admin-microcluster\tALLOWS\ticmp\t-1\t-1\tFROM\tUSER\t728213020069\tNAME @sc-admin-microcluster\tID sg-726e1a1a\tingress', 'PERMISSION\t728213020069\t@sc-admin-microcluster\tALLOWS\ttcp\t1\t65535\tFROM\tUSER\t728213020069\tNAME @sc-admin-microcluster\tID sg-726e1a1a\tingress', 'PERMISSION\t728213020069\t@sc-admin-microcluster\tALLOWS\tudp\t1\t65535\tFROM\tUSER\t728213020069\tNAME @sc-admin-microcluster\tID sg-726e1a1a\tingress', 'PERMISSION\t728213020069\t@sc-admin-microcluster\tALLOWS\ttcp\t22\t22\tFROM\tCIDR\t0.0.0.0/0\tingress', '']
PID: 4160 automount.py:132 - INFO - Filtering permissions to exclude existing permissions
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 2049 -P tcp
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 2049 -P udp
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 111 -P tcp
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 111 -P udp
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 32767 -P tcp
PID: 4160 automount.py:159 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 32767 -P udp
PID: 4160 automount.py:164 - INFO - automount.NfsShares.getHeadIp    Getting headnode internal IP
PID: 4160 automount.py:167 - DEBUG - automount.NfsShares.getHeadIp    instanceid: i-b34d25d2
PID: 4160 automount.py:171 - DEBUG - automount.NfsShares.getHeadIp    command: ec2-describe-instances -K /agua/conf/.ec2/admin/private.pem -C /agua/conf/.ec2/admin/public.pem i-b34d25d2
PID: 4160 automount.py:174 - DEBUG - automount.NfsShares.getHeadIp    reservation: RESERVATION	r-cb22aca4	728213020069	default
INSTANCE	i-b34d25d2	ami-76837d1f	ec2-23-23-45-189.compute-1.amazonaws.com	ip-10-123-7-98.ec2.internal	running	aquarius2	0		m1.small	2012-09-07T17:32:45+0000	us-east-1a	aki-0b4aa462			monitoring-disabled	23.23.45.189	10.123.7.98			ebs					paravirtual	xen		sg-2925d740	default
BLOCKDEVICE	/dev/sdi	vol-161ce07c	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sda1	vol-101ce07a	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdk	vol-53155839	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdl	vol-5bffe631	2012-09-07T17:33:11.000Z	
TAG	instance	i-b34d25d2	name	aquarius-8g
TAG	instance	i-b34d25d2	description	aquarius-8f2 using aquarius2 to run cluster versions of pipelines (MAQ, BOWTIE, NOVOALIGN)

PID: 4160 automount.py:177 - DEBUG - automount.NfsShares.getHeadIp    instance: 	i-b34d25d2	ami-76837d1f	ec2-23-23-45-189.compute-1.amazonaws.com	ip-10-123-7-98.ec2.internal	running	aquarius2	0		m1.small	2012-09-07T17:32:45+0000	us-east-1a	aki-0b4aa462			monitoring-disabled	23.23.45.189	10.123.7.98			ebs					paravirtual	xen		sg-2925d740	default
BLOCKDEVICE	/dev/sdi	vol-161ce07c	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sda1	vol-101ce07a	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdk	vol-53155839	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdl	vol-5bffe631	2012-09-07T17:33:11.000Z	
TAG	instance	i-b34d25d2	name	aquarius-8g
TAG	instance	i-b34d25d2	description	aquarius-8f2 using aquarius2 to run cluster versions of pipelines (MAQ, BOWTIE, NOVOALIGN)

PID: 4160 automount.py:180 - DEBUG - automount.NfsShares.getHeadIp    self.head_ip: 10.123.7.98
PID: 4160 automount.py:252 - INFO - Setting mountd port on master
PID: 4160 automount.py:254 - DEBUG - Doing node.ssh.execute: echo 'RPCMOUNTDOPTS="--port 32767 --manage-gids"' >> /etc/default/nfs-kernel-server;
PID: 4160 automount.py:259 - DEBUG - Doing os.system: echo 'RPCMOUNTDOPTS="--port 32767 --manage-gids"' >> /etc/default/nfs-kernel-server;
PID: 4160 automount.py:186 - INFO - Mounting shared from head node to master
PID: 4160 automount.py:187 - DEBUG - automount.NfsShares.mount    node.private_dns_name: ip-10-127-106-176.ec2.internal
PID: 4160 automount.py:188 - DEBUG - automount.NfsShares.mount    self.head_ip: 10.123.7.98
PID: 4160 automount.py:191 - DEBUG - automount.NfsShares.on_add_node    Doing self._addToFstab
PID: 4160 automount.py:208 - INFO - Adding /etc/fstab entry (/agua on master)
PID: 4160 automount.py:211 - DEBUG - echo '10.123.7.98:/agua  /agua  nfs  nfsvers=3,defaults 0 0' >> /etc/fstab ;
PID: 4160 automount.py:208 - INFO - Adding /etc/fstab entry (/data on master)
PID: 4160 automount.py:211 - DEBUG - echo '10.123.7.98:/data  /data  nfs  nfsvers=3,defaults 0 0' >> /etc/fstab ;
PID: 4160 automount.py:208 - INFO - Adding /etc/fstab entry (/nethome on master)
PID: 4160 automount.py:211 - DEBUG - echo '10.123.7.98:/nethome  /nethome  nfs  nfsvers=3,defaults 0 0' >> /etc/fstab ;
PID: 4160 automount.py:196 - DEBUG - automount.NfsShares.mount    Doing self._addToExports
PID: 4160 automount.py:218 - INFO - Adding /etc/exports entry (/agua to master)
PID: 4160 automount.py:218 - INFO - Adding /etc/exports entry (/data to master)
PID: 4160 automount.py:218 - INFO - Adding /etc/exports entry (/nethome to master)
PID: 4160 automount.py:286 - INFO - Mounting NFS shares on master
PID: 4160 automount.py:288 - INFO - mount -t nfs 10.123.7.98:/agua /agua
PID: 4160 automount.py:295 - DEBUG - automount.NfsShares.mountShares    cmd: mount -t nfs 10.123.7.98:/agua /agua
PID: 4160 automount.py:286 - INFO - Mounting NFS shares on master
PID: 4160 automount.py:288 - INFO - mount -t nfs 10.123.7.98:/data /data
PID: 4160 automount.py:295 - DEBUG - automount.NfsShares.mountShares    cmd: mount -t nfs 10.123.7.98:/data /data
PID: 4160 automount.py:286 - INFO - Mounting NFS shares on master
PID: 4160 automount.py:288 - INFO - mount -t nfs 10.123.7.98:/nethome /nethome
PID: 4160 automount.py:295 - DEBUG - automount.NfsShares.mountShares    cmd: mount -t nfs 10.123.7.98:/nethome /nethome
PID: 4160 automount.py:78 - INFO - automount.NfsShares.run    Completed
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 cluster.py:1300 - INFO - Running plugin sge
PID: 4160 sge.py:69 - INFO - Running plugin: sge.CreateCell
PID: 4160 sge.py:70 - DEBUG - sge.CreateCell.run    CreateCell.run(nodes, master, user, user_shell, volumes
PID: 4160 sge.py:152 - INFO - Opening SGE qmaster and execd ports
PID: 4160 sge.py:159 - INFO - CreateCell.openSgePorts    CreateCell.openSgePorts()
PID: 4160 sge.py:160 - DEBUG - sge.CreateCell.openSgePorts    qmasterport; 36351
PID: 4160 sge.py:161 - DEBUG - sge.CreateCell.openSgePorts    execdport; 36352
PID: 4160 sge.py:162 - DEBUG - sge.CreateCell.openSgePorts    envars; export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; 
PID: 4160 sge.py:169 - INFO - CreateCell.openSgePorts    Opening ports
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 36352 -P tcp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 36352 -P udp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 36351 -P tcp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize @sc-admin-microcluster -p 36351 -P udp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize default -p 36352 -P tcp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize default -p 36352 -P udp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize default -p 36351 -P tcp
PID: 4160 sge.py:185 - INFO - export EC2_PRIVATE_KEY=/agua/conf/.ec2/admin/private.pem; export EC2_CERT=/agua/conf/.ec2/admin/public.pem; ec2-authorize default -p 36351 -P udp
PID: 4160 sge.py:610 - INFO - Copying cell directory on head node
PID: 4160 sge.py:611 - DEBUG - sge.CreateCell.copyCellOnHead    CreateCell.copyCellOnHead()
PID: 4160 sge.py:613 - DEBUG - sge.CreateCell.copyCellOnHead    commands: ('mkdir /opt/sge6/admin-microcluster &> /dev/null', 'rsync -a /opt/sge6/default/* /opt/sge6/admin-microcluster --exclude *tar.gz', 'chown -R sgeadmin:sgeadmin /opt/sge6/admin-microcluster')
PID: 4160 sge.py:616 - DEBUG - sge.CreateCell.copyCell    target: /opt/sge6/admin-microcluster
PID: 4160 sge.py:617 - DEBUG - sge.CreateCell.copyCellOnHead    os.path.isdir(target): True
PID: 4160 sge.py:630 - INFO - Copying cell directory on master
PID: 4160 sge.py:631 - DEBUG - sge.CreateCell.copyCell    CreateCell.copyCell(master)
PID: 4160 sge.py:633 - DEBUG - sge.CreateCell.copyCell    commands: ('mkdir /opt/sge6/admin-microcluster &> /dev/null', 'rsync -a /opt/sge6/default/* /opt/sge6/admin-microcluster --exclude *tar.gz', 'chown -R sgeadmin:sgeadmin /opt/sge6/admin-microcluster')
PID: 4160 sge.py:636 - DEBUG - sge.CreateCell.copyCell    target: /opt/sge6/admin-microcluster
PID: 4160 sge.py:637 - DEBUG - sge.CreateCell.copyCell    os.path.isdir(target): True
PID: 4160 sge.py:640 - INFO - mkdir /opt/sge6/admin-microcluster &> /dev/null
PID: 4160 sge.py:533 - DEBUG - sge.CreateCell.createSettings    cmd: cd /opt/sge6/admin-microcluster/common; export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/util/create_settings.sh /opt/sge6/admin-microcluster/common
PID: 4160 ssh.py:399 - ERROR - command 'cd /opt/sge6/admin-microcluster/common; export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/util/create_settings.sh /opt/sge6/admin-microcluster/common' failed with status 2
PID: 4160 ssh.py:405 - DEBUG - bash: line 0: cd: /opt/sge6/admin-microcluster/common: No such file or directory
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 67: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 68: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 69: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 70: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 71: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 72: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 75: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 80: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 86: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 92: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 95: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 96: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 97: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 98: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 99: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 100: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 101: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 102: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 103: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 105: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 106: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 107: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 108: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 109: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 110: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 111: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 112: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 113: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 114: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 115: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 116: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 117: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 118: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 119: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 120: cannot create /opt/sge6/admin-microcluster/common/settings.csh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 126: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 127: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 128: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 129: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 130: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 131: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 137: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 139: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 145: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 150: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 153: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 154: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 155: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 156: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 157: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 158: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 159: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 161: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 162: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 163: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 164: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 165: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 166: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 167: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 168: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 169: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 170: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 171: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 172: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 173: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 174: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 175: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 176: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 ssh.py:405 - DEBUG - /opt/sge6/util/create_settings.sh: 177: cannot create /opt/sge6/admin-microcluster/common/settings.sh: Directory nonexistent
PID: 4160 sge.py:640 - INFO - rsync -a /opt/sge6/default/* /opt/sge6/admin-microcluster --exclude *tar.gz
PID: 4160 sge.py:533 - DEBUG - sge.CreateCell.createSettings    cmd: cd /opt/sge6/admin-microcluster/common; export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/util/create_settings.sh /opt/sge6/admin-microcluster/common
PID: 4160 sge.py:640 - INFO - chown -R sgeadmin:sgeadmin /opt/sge6/admin-microcluster
PID: 4160 sge.py:533 - DEBUG - sge.CreateCell.createSettings    cmd: cd /opt/sge6/admin-microcluster/common; export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/util/create_settings.sh /opt/sge6/admin-microcluster/common
PID: 4160 sge.py:207 - INFO - Setting master hostname
PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 sge.py:211 - INFO - sge.CreateCell.setMasterHostname    command: hostname ip-10-127-106-176
PID: 4160 sge.py:215 - INFO - sge.CreateCell.setMasterHostname    command: echo 'ip-10-127-106-176' > /etc/hostname
PID: 4160 sge.py:224 - INFO - Setting headnode hostname
PID: 4160 sge.py:228 - INFO - sge.CreateCell.setHeadnodeHostname    hostname: ip-10-123-7-98.ec2.internal
PID: 4160 sge.py:231 - INFO - sge.CreateCell.setHeadnodeHostname    command: hostname ip-10-123-7-98.ec2.internal
PID: 4160 sge.py:235 - INFO - sge.CreateCell.setHeadnodeHostname    command: echo 'ip-10-123-7-98.ec2.internal' > /etc/hostname
PID: 4160 sge.py:193 - INFO - Setting act_qmaster file contents
PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 sge.py:198 - DEBUG - sge.CreateCell.setMasterActQmaster    command: echo 'ip-10-127-106-176' > /opt/sge6/admin-microcluster/common/act_qmaster
PID: 4160 sge.py:246 - INFO - sge.CreateCell.setMasterEtcHosts    Writing master hostname to /etc/hosts
PID: 4160 sge.py:250 - INFO - sge.CreateCell.setMasterEtcHosts     command: cat /etc/hosts
PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 sge.py:263 - INFO - sge.CreateCell.setMasterEtcHosts    AFTER etchosts: 127.0.0.1       localhost

# The following lines are desirable for IPv6 capable hosts                     ::1 ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts

10.127.106.176	ip-10-127-106-176	localhost

PID: 4160 sge.py:270 - INFO - sge.CreateCell.setMasterEtcHosts    command: /etc/init.d/networking restart
PID: 4160 ssh.py:405 - DEBUG - * Running /etc/init.d/networking restart is deprecated because it may not enable again some interfaces
PID: 4160 ssh.py:405 - DEBUG - * Reconfiguring network interfaces...
PID: 4160 ssh.py:405 - DEBUG - ssh stop/waiting
PID: 4160 ssh.py:405 - DEBUG - ssh start/running, process 2095
PID: 4160 ssh.py:405 - DEBUG - ...done.
PID: 4160 ssh.py:405 - DEBUG - RTNETLINK answers: File exists
PID: 4160 sge.py:272 - INFO - sge.CreateCell.setMasterEtcHosts    result: ['* Running /etc/init.d/networking restart is deprecated because it may not enable again some interfaces', '* Reconfiguring network interfaces...', 'ssh stop/waiting', 'ssh start/running, process 2095', '...done.', 'RTNETLINK answers: File exists']
PID: 4160 sge.py:497 - INFO - Restarting SGE qmaster and execd daemons
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:500 - INFO - CreateCell.restartSge    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:509 - DEBUG - sge.CreateCell.restartSge    Doing RESTART SGE: master (10.127.106.176)
PID: 4160 sge.py:513 - INFO - /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:516 - INFO - /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:519 - INFO - sge.CreateCell.restartSge    node.alias: master
PID: 4160 sge.py:522 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_qmaster
PID: 4160 sge.py:525 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_execd
PID: 4160 sge.py:402 - INFO - Adding environment variables to /etc/profile
PID: 4160 sge.py:404 - DEBUG - sge.CreateCell.addEnvarsToProfile    envars: echo 'export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; ' >> /etc/profile
PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:279 - INFO - CreateCell.setMasterSubmit    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:283 - DEBUG - sge.CreateCell.setMasterSubmit    add_submit: export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/qconf -as ip-10-127-106-176
PID: 4160 ssh.py:405 - DEBUG - ip-10-127-106-176 added to submit host list
PID: 4160 sge.py:285 - DEBUG - sge.CreateCell.setMasterSubmit    add_admin: export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/qconf -ah ip-10-127-106-176
PID: 4160 ssh.py:405 - DEBUG - adminhost "ip-10-127-106-176" already exists
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 sge.py:587 - INFO - CreateCell.setMasterInfo    instanceid: ['i-fcb92e86']
PID: 4160 sge.py:594 - INFO - CreateCell.setMasterInfo    cmd: echo '10.127.106.176	10.127.106.176	i-fcb92e86' > /opt/sge6/admin-microcluster/qmaster_info
PID: 4160 sge.py:568 - INFO - Updating act_qmaster file
PID: 4160 sge.py:569 - DEBUG - sge.CreateCell.updateHeadActQmaster    CreateCell.updateHeadActQmaster(nodes)
PID: 4160 sge.py:573 - DEBUG - sge.CreateCell.updateHeadActQmaster    act_qmaster: /opt/sge6/admin-microcluster/common/act_qmaster
PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 sge.py:576 - DEBUG - sge.CreateCell.updateHeadActQmaster    hostname: ip-10-127-106-176
PID: 4160 sge.py:579 - DEBUG - sge.CreateCell.updateHeadActQmaster    cmd: echo 'ip-10-127-106-176' > /opt/sge6/admin-microcluster/common/act_qmaster
PID: 4160 sge.py:475 - INFO - Adding head node to submit hosts and admin hosts lists
PID: 4160 sge.py:345 - INFO - sge.CreateCell.getHeadIp    Getting headnode internal IP
PID: 4160 sge.py:348 - DEBUG - sge.CreateCell.getHeadIp    instanceid: i-b34d25d2
PID: 4160 sge.py:352 - DEBUG - sge.CreateCell.getHeadIp    command: ec2-describe-instances -K /agua/conf/.ec2/admin/private.pem -C /agua/conf/.ec2/admin/public.pem i-b34d25d2
PID: 4160 sge.py:355 - DEBUG - sge.CreateCell.getHeadIp    reservation: RESERVATION	r-cb22aca4	728213020069	default
INSTANCE	i-b34d25d2	ami-76837d1f	ec2-23-23-45-189.compute-1.amazonaws.com	ip-10-123-7-98.ec2.internal	running	aquarius2	0		m1.small	2012-09-07T17:32:45+0000	us-east-1a	aki-0b4aa462			monitoring-disabled	23.23.45.189	10.123.7.98			ebs					paravirtual	xen		sg-2925d740	default
BLOCKDEVICE	/dev/sdi	vol-161ce07c	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sda1	vol-101ce07a	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdk	vol-53155839	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdl	vol-5bffe631	2012-09-07T17:33:11.000Z	
TAG	instance	i-b34d25d2	name	aquarius-8g
TAG	instance	i-b34d25d2	description	aquarius-8f2 using aquarius2 to run cluster versions of pipelines (MAQ, BOWTIE, NOVOALIGN)

PID: 4160 sge.py:358 - DEBUG - sge.CreateCell.getHeadIp    instance: 	i-b34d25d2	ami-76837d1f	ec2-23-23-45-189.compute-1.amazonaws.com	ip-10-123-7-98.ec2.internal	running	aquarius2	0		m1.small	2012-09-07T17:32:45+0000	us-east-1a	aki-0b4aa462			monitoring-disabled	23.23.45.189	10.123.7.98			ebs					paravirtual	xen		sg-2925d740	default
BLOCKDEVICE	/dev/sdi	vol-161ce07c	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sda1	vol-101ce07a	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdk	vol-53155839	2012-09-07T17:33:11.000Z	
BLOCKDEVICE	/dev/sdl	vol-5bffe631	2012-09-07T17:33:11.000Z	
TAG	instance	i-b34d25d2	name	aquarius-8g
TAG	instance	i-b34d25d2	description	aquarius-8f2 using aquarius2 to run cluster versions of pipelines (MAQ, BOWTIE, NOVOALIGN)

PID: 4160 sge.py:361 - INFO - sge.CreateCell.getHeadIp    self.head_ip: 10.123.7.98
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:483 - INFO - CreateCell.setHeadSubmit rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:488 - INFO - sge.CreateCell.setHeadSubmit    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/qconf -as 10.123.7.98
PID: 4160 ssh.py:405 - DEBUG - ip-10-123-7-98.ec2.internal added to submit host list
PID: 4160 sge.py:490 - INFO - sge.CreateCell.setHeadSubmit    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/qconf -ah 10.123.7.98
PID: 4160 ssh.py:405 - DEBUG - ip-10-123-7-98.ec2.internal added to administrative host list
PID: 4160 sge.py:289 - INFO - sge.CreateCell.addMasterToAllHosts    Replacing 'master' with master INTERNAL IP in @allhosts
PID: 4160 sge.py:294 - INFO - sge.CreateCell.addMasterToAllHosts     command: export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/lx24-amd64/qconf -shgrp @allhosts
PID: 4160 sge.py:297 - INFO - sge.CreateCell.addMasterToAllHosts    BEFORE allhosts_template: group_name @allhosts
hostlist master

PID: 4160 sge.py:240 - INFO - sge.CreateCell.getHostname    master_ip: 10.127.106.176
PID: 4160 sge.py:242 - INFO - sge.CreateCell.getHostname    hostname: ip-10-127-106-176
PID: 4160 sge.py:311 - INFO - sge.CreateCell.addMasterToAllHosts    AFTER allhosts_template: group_name @allhosts
hostlist  ip-10-127-106-176
PID: 4160 sge.py:316 - INFO - sge.CreateCell.addMasterToAllHosts    printed filename: /tmp/admin-microcluster-allhosts.txt
PID: 4160 sge.py:319 - INFO - sge.CreateCell.addMasterToAllHosts    set_command: export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/lx24-amd64/qconf -Mhgrp /tmp/admin-microcluster-allhosts.txt
PID: 4160 sge.py:497 - INFO - Restarting SGE qmaster and execd daemons
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:500 - INFO - CreateCell.restartSge    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:509 - DEBUG - sge.CreateCell.restartSge    Doing RESTART SGE: master (10.127.106.176)
PID: 4160 sge.py:513 - INFO - /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:516 - INFO - /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:519 - INFO - sge.CreateCell.restartSge    node.alias: master
PID: 4160 sge.py:522 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_qmaster
PID: 4160 sge.py:525 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_execd
PID: 4160 sge.py:411 - INFO - Enabling job scheduling info
PID: 4160 sge.py:414 - DEBUG - export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/lx24-amd64/qconf -ssconf
PID: 4160 sge.py:416 - DEBUG - sge.CreateCell.enableSchedulingInfo    BEFORE queue_template: algorithm                         default
schedule_interval                 0:0:15
maxujobs                          0
queue_sort_method                 load
job_load_adjustments              np_load_avg=0.50
load_adjustment_decay_time        0:7:30
load_formula                      np_load_avg
schedd_job_info                   false
flush_submit_sec                  0
flush_finish_sec                  0
params                            none
reprioritize_interval             0:0:0
halftime                          168
usage_weight_list                 cpu=1.000000,mem=0.000000,io=0.000000
compensation_factor               5.000000
weight_user                       0.250000
weight_project                    0.250000
weight_department                 0.250000
weight_job                        0.250000
weight_tickets_functional         0
weight_tickets_share              0
share_override_tickets            TRUE
share_functional_shares           TRUE
max_functional_jobs_to_schedule   200
report_pjob_tickets               TRUE
max_pending_tasks_per_job         50
halflife_decay_list               none
policy_hierarchy                  OFS
weight_ticket                     0.010000
weight_waiting_time               0.000000
weight_deadline                   3600000.000000
weight_urgency                    0.100000
weight_priority                   1.000000
max_reservation                   0
default_duration                  INFINITY

PID: 4160 sge.py:421 - DEBUG - sge.CreateCell.enableSchedulingInfo    AFTER queue_template: algorithm                         default
schedule_interval                 0:0:15
maxujobs                          0
queue_sort_method                 load
job_load_adjustments              np_load_avg=0.50
load_adjustment_decay_time        0:7:30
load_formula                      np_load_avg
schedd_job_info                   true
flush_submit_sec                  0
flush_finish_sec                  0
params                            none
reprioritize_interval             0:0:0
halftime                          168
usage_weight_list                 cpu=1.000000,mem=0.000000,io=0.000000
compensation_factor               5.000000
weight_user                       0.250000
weight_project                    0.250000
weight_department                 0.250000
weight_job                        0.250000
weight_tickets_functional         0
weight_tickets_share              0
share_override_tickets            TRUE
share_functional_shares           TRUE
max_functional_jobs_to_schedule   200
report_pjob_tickets               TRUE
max_pending_tasks_per_job         50
halflife_decay_list               none
policy_hierarchy                  OFS
weight_ticket                     0.010000
weight_waiting_time               0.000000
weight_deadline                   3600000.000000
weight_urgency                    0.100000
weight_priority                   1.000000
max_reservation                   0
default_duration                  INFINITY

PID: 4160 sge.py:430 - DEBUG - export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/lx24-amd64/qconf -Msconf /tmp/queue-4160.txt
PID: 4160 sge.py:433 - DEBUG - rm -fr /tmp/queue-4160.txt
PID: 4160 sge.py:440 - INFO - Adding 'threaded' parallel environment
PID: 4160 sge.py:456 - INFO - addParallelEnvironment    sge_pe_template: 
        pe_name           threaded
        slots             %s
        user_lists        NONE
        xuser_lists       NONE
        start_proc_args   /bin/true
        stop_proc_args    /bin/true
        allocation_rule   $pe_slots
        control_slaves    TRUE
        job_is_first_task FALSE
        urgency_slots     min
        accounting_summary FALSE
        
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:466 - INFO - CreateCell.addParallelEnvironment    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:378 - INFO - Add master to @allhosts group
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:386 - INFO - CreateCell.addToAllhosts    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:389 - INFO - sge.addToAllhosts    command: /opt/sge6/bin/linux-x64/qconf -aattr hostgroup hostlist master @allhosts >> /tmp/allhosts.out; 
PID: 4160 ssh.py:399 - ERROR - command 'export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/qconf -aattr hostgroup hostlist master @allhosts >> /tmp/allhosts.out; ' failed with status 1
PID: 4160 ssh.py:405 - DEBUG - unable to resolve host "master"
PID: 4160 sge.py:497 - INFO - Restarting SGE qmaster and execd daemons
PID: 4160 ssh.py:405 - DEBUG - i-fcb92e86
PID: 4160 ssh.py:405 - DEBUG - export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"
PID: 4160 sge.py:139 - DEBUG - sge.CreateCell.getRootPath    rootpath: ['export ROOTPATH="$ROOTPATH:$SGE_ROOT/bin/linux-x64"']
PID: 4160 sge.py:500 - INFO - CreateCell.restartSge    rootpath: /opt/sge6/bin/linux-x64
PID: 4160 sge.py:509 - DEBUG - sge.CreateCell.restartSge    Doing RESTART SGE: master (10.127.106.176)
PID: 4160 sge.py:513 - INFO - /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep sgeadmin | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:516 - INFO - /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null
PID: 4160 ssh.py:402 - DEBUG - command /bin/ps aux | grep root | grep sge | cut -c9-14 | xargs -n1 -iPID /bin/kill -9 PID &> /dev/null failed with status -1
PID: 4160 sge.py:519 - INFO - sge.CreateCell.restartSge    node.alias: master
PID: 4160 sge.py:522 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_qmaster
PID: 4160 sge.py:525 - INFO - sge.CreateCell.restartSge    export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/linux-x64/sge_execd
PID: 4160 sge.py:367 - INFO - sge.CreateCell.removeAllq    Removing the default 'all.q' queue
PID: 4160 sge.py:371 - DEBUG - sge.CreateCell.removeAllq     command: export SGE_ROOT=/opt/sge6; export SGE_CELL=admin-microcluster; export SGE_QMASTER_PORT=36351; export SGE_EXECD_PORT=36352; /opt/sge6/bin/lx24-amd64/qconf -dq all.q
PID: 4160 sge.py:133 - INFO - sge.CreateCell.run    Completed
PID: 4160 cluster.py:670 - DEBUG - existing nodes: {u'i-fcb92e86': <Node: master (i-fcb92e86)>}
PID: 4160 cluster.py:673 - DEBUG - updating existing node i-fcb92e86 in self._nodes
PID: 4160 cluster.py:686 - DEBUG - returning self._nodes = [<Node: master (i-fcb92e86)>]
PID: 4160 cluster.py:1300 - INFO - Running plugin startup
PID: 4160 startup.py:79 - INFO - Running plugin: startup.StartUp
PID: 4160 startup.py:80 - DEBUG - StartUp.run    StartUp.run(nodes, master, user, user_shell, volumes
PID: 4160 startup.py:129 - INFO - Copying key files to master
PID: 4160 startup.py:132 - INFO - startup.StartUp.copyScript    command: mkdir -p /reset
PID: 4160 startup.py:161 - INFO - startup.uploadToMaster.editStartupScript    sourcefile: /agua/bin/scripts/resetMaster.pl 
PID: 4160 startup.py:162 - INFO - startup.uploadToMaster.editStartupScript    targetfile: /reset/resetMaster.pl 
PID: 4160 startup.py:145 - INFO - Copying private key file to master
PID: 4160 startup.py:161 - INFO - startup.uploadToMaster.editStartupScript    sourcefile: /agua/conf/.ec2/admin/private.pem 
PID: 4160 startup.py:162 - INFO - startup.uploadToMaster.editStartupScript    targetfile: /reset/private.pem 
PID: 4160 startup.py:151 - INFO - Copying public cert file to master
PID: 4160 startup.py:161 - INFO - startup.uploadToMaster.editStartupScript    sourcefile: /agua/conf/.ec2/admin/public.pem 
PID: 4160 startup.py:162 - INFO - startup.uploadToMaster.editStartupScript    targetfile: /reset/public.pem 
PID: 4160 startup.py:98 - INFO - Adding entry to /etc/rc.local to run masterRestart on boot
PID: 4160 startup.py:99 - DEBUG - startup.StartUp.editStartupScript    self.installdir: /agua 
PID: 4160 startup.py:102 - DEBUG - startup.StartUp.editStartupScript    file: /etc/rc.local 
PID: 4160 startup.py:109 - DEBUG - startup.StartUp.editStartupScript    command: /reset/resetMaster.pl  --cell admin-microcluster --headnodeid i-b34d25d2 --cgiscript /cgi-bin/agua/reset.cgi 
PID: 4160 startup.py:114 - DEBUG - startup.StartUp.editStartupScript    contents: #!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
 
PID: 4160 startup.py:119 - DEBUG - startup.StartUp.editStartupScript    printing to /etc/rc.local contents: #!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.


/reset/resetMaster.pl  --cell admin-microcluster --headnodeid i-b34d25d2 --cgiscript /cgi-bin/agua/reset.cgi

exit 0
 
PID: 4160 startup.py:91 - INFO - startup.Startup.__init__    Completed
PID: 4160 cluster.py:1243 - INFO - 

The cluster ERROR has been started and configured.
Login to the master node as root by running:

    $ starcluster sshmaster admin-microcluster

When you are finished using the cluster, run:

    $ starcluster stop admin-microcluster

to shutdown the cluster and stop paying for service.

If this cluster uses EBS instances then the 'stop' command above will put all nodes into a 'stopped' state. The cluster may then be restarted at a later time, without losing data, by passing the -x option to the 'start' command.

To completely terminate an EBS cluster:

    $ starcluster terminate admin-microcluster

NOTE: Terminating an EBS cluster will destroy all volumes backing the nodes.

PID: 4160 utils.py:72 - INFO - Starting cluster took 8.927 mins
PID: 4160 ssh.py:536 - DEBUG - __del__ called
