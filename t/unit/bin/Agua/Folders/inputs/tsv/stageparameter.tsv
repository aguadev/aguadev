aguatest	syoung	Project1	Workflow1	0	FTP	1	filter	0	0	input	filter	string	--filter		optional		Download only files containing this text fragment				0
aguatest	syoung	Project1	Workflow1	0	FTP	1	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow1/downloads	required		Create this directory and download files to it				0
aguatest	syoung	Project1	Workflow1	0	FTP	1	regex	0	0	input	regex	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Download files matching this regular expression				0
aguatest	syoung	Project1	Workflow1	0	FTP	1	type	0	0	input	type	string	--type	html	essential		Type of page: html or text				0
aguatest	syoung	Project1	Workflow1	0	FTP	1	url	0	0	input	url	string	--url	http://some.url	required		Download files linked on this page				0
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	delete	1	0	input	delete	flag	--delete	1	optional		Remove zipped files after unzipping				0
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	filter	0	0	input	filter	string	--filter		optional		Unzip only files containing this text fragment				0
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	inputdir	0	0	input	inputdir	directory	--inputdir	Project1/Workflow1/downloads	essential		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)	input.outputdir.value	InputParams		1
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow1/downloads	required		Unzip files to this directory	input.outputdir.value	InputParams		1
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	regex	0	0	input	filter	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Unzip only files matching this regular expression	input.regex.value			1
aguatest	syoung	Project1	Workflow1	0	unzipFiles	2	type	0	0	input	type	string	--type	gunzip	required		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)				0
aguatest	syoung	Project1	Workflow1	0	bowtieIndex	3	inputdir	1	0	input	inputdir	directory	--inputdir	Project1/Workflow1/downloads	essential		Location of directory containing *.fa files	input.referencedir.value, input.outputdir.value, input.inputdir.value	refdir,outputdir,inputdir		0
aguatest	syoung	Project1	Workflow1	0	bowtieIndex	3	outputdir	1	0	input	inputdir	directory	--outputdir	Project1/Workflow1/inputs	required		Print indexed files to this directory	input.referencedir.value, input.outputdir.value, input.inputdir.value			0
aguatest	syoung	Project1	Workflow1	0	bowtieIndex	3	subdirs	1	1	input	subdirs	flag	--subdirs	1	optional			input.subdirs.value			0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	coverage	0	0	output	coverage	file		Project1/Workflow1/coverage.wig	Discretion		A UCSC BedGraph wigglegram track, showing the depth of coverage at each position, including the spliced read alignments.				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	cpus	0	0	input	cpus	integer	--cpus		optional		Max. number of cpus per job (1 to 4) (DEFAULT = 4)				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	distance	0	0	input	distance	integer	--distance	200	required		The  mean inner distance between first read and its mate pair (corresponds to -r/--mate-inner-dist argument to Tophat)				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	hits	0	0	output	hits	file		Project1/Workflow1/accepted_hits.sam	Discretion		A list of read alignments in SAM format. SAM is a compact short read alignment format that is increasingly being adopted.				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	inputfiles	0	0	input	inputfiles	file	--inputfiles	Project1/Workflow1/yoruba1-1.reads_1.1M.sequence.txt	required		Comma-separated *sequence.txt file names (e.g., s_1_1_sequence.txt,s_2_1_sequence.txt)				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	jobs	0	0	input	jobs	integer	--jobs		optional		Max. number of concurrent cluster jobs (DEFAULT = 30)				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	junctions	0	0	output	junctions	file		Project1/Workflow1/junctions.bed	Discretion		A UCSC BED track of junctions reported by TopHat. Each junction consists of two connected BED blocks, where each block is as long as the maximal overhang of any read spanning the junction. The score is the number of alignments spanning the junction.				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	keep	0	0	input	keep	flag	--keep		optional		Keep intermediate files				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	matefiles	0	0	input	matefiles	file	--matefiles		optional		Comma-separated *sequence.txt mate file names (e.g., s_1_2_sequence.txt,s_2_2_sequence.txt) with locations as paths relative to the output directory				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow1	required		Create this directory and write output files to it				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	outputfile	0	0	output	outputfile	file		Project1/Workflow1/out.sam	Discretion	sam	SAM file containing				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	params	0	0	input	params	string	--params		optional		Additional parameters to be passed to tophat (e.g., --solexa1.3-quals				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	queue	0	0	input	queue	string	--queue		optional		Cluster queue options				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	reference	0	0	input	reference	file	--reference	Project1/Workflow1/chr22/chr22.1.ebwt	required		Location of indexed reference file  (NB: Use file stub, e.g., /some/path/hg19)				0
aguatest	syoung	Project1	Workflow1	0	TOPHAT	4	label	0	0	input	label	string	--label	bowtie-0	required		Name to used to submit jobs to cluster (e.g., tophat-sample1)				0
aguatest	syoung	Project1	Workflow2	0	FTP	1	filter	0	0	input	filter	string	--filter		optional		Download only files containing this text fragment				0
aguatest	syoung	Project1	Workflow2	0	FTP	1	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow2/downloads	required		Create this directory and download files to it				0
aguatest	syoung	Project1	Workflow2	0	FTP	1	regex	0	0	input	regex	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Download files matching this regular expression				0
aguatest	syoung	Project1	Workflow2	0	FTP	1	type	0	0	input	type	string	--type	html	essential		Type of page: html or text				0
aguatest	syoung	Project1	Workflow2	0	FTP	1	url	0	0	input	url	string	--url	ftp://some/ftp/url	required		Download files linked on this page				0
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	delete	1	0	input	delete	flag	--delete	1	optional		Remove zipped files after unzipping				0
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	filter	0	0	input	filter	string	--filter		optional		Unzip only files containing this text fragment				0
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	inputdir	0	0	input	inputdir	directory	--inputdir	Project1/Workflow2/downloads	essential		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)	input.outputdir.value	InputParams		1
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow2/downloads	required		Unzip files to this directory	input.outputdir.value	InputParams		1
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	regex	0	0	input	filter	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Unzip only files matching this regular expression	input.regex.value			1
aguatest	syoung	Project1	Workflow2	0	unzipFiles	2	type	0	0	input	type	string	--type	gunzip	required		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)				0
aguatest	syoung	Project1	Workflow2	0	elandIndex	4	inputdir	0	0	input	inputdir	directory	--inputdir	Project1/Workflow2/reference/fasta	essential		Location of directory containing *.fa files	input.referencedir.value,input.outputdir.value,input.inputdir.value	referencedir,outputdir,inputdir	if ( referencedir != null && referencedir != "") return referencedir; if ( outputdir != null && outputdir != "") return outputdir; if ( inputdir != null && inputdir != "") return inputdir; 	0
aguatest	syoung	Project1	Workflow2	0	elandIndex	4	outputdir	1	0	input	outputdir	directory	--outputdir	Project1/Workflow2/reference/eland	required		Print indexed files to this directory	input.referencedir.value,input.outputdir.value,input.inputdir.value	referencedir,outputdir,inputdir	if ( referencedir != null && referencedir != "") return referencedir; if ( outputdir != null && outputdir != "") return outputdir; if ( inputdir != null && inputdir != "") return inputdir; 	0
aguatest	syoung	Project1	Workflow2	0	elandIndex	4	subdirs	1	0	input	subdirs	flag	--subdirs		optional			input.subdirs.value			0
aguatest	syoung	Project1	Workflow2	0	elandHeader	3	inputfile	0	0	input	readfile 	file	--inputfile	Project1/Workflow2/sequence.txt	essential		FASTQ file not in ELAND format (for use with ELAND_standalone.pl)	output.outputfile.value			0
aguatest	syoung	Project1	Workflow2	0	elandHeader	3	label	1	1	input	label	string	--label	myLabel	required		Add this to the filenames of the converted files to identify the experiment/data test this				0
aguatest	syoung	Project1	Workflow2	0	elandHeader	3	matefile	1	1	input	matefile	file	--matefile				Complementary FASTQ reads file for input files 				0
aguatest	syoung	Project1	Workflow2	0	elandHeader	3	matefile	1	1	output	matefile	file	--matefile		\
         		Converted (ELAND_standalone.pl-compliant) complementary FASTQ reads file for input files 	input.matefile.value,input.label.value	file,label	console.log("file: " + file); console.log("label: " + label); if ( file == null || file == "") return; var suffix; if ( file.match(/(.[^.]{1,5})$/) ) suffix = file.match(/(.[^.]{1,5})$/)[1]; console.log("suffix: " + suffix); file = file.replace(/.[^.]{1,5}$/, ""); if ( label != null) file += "." + label; if ( suffix != null ) file += suffix; console.log("Returning file: " + file);   return file;	0
aguatest	syoung	Project1	Workflow2	0	elandHeader	3	readfile	1	0	output	readfile	file		%project%/%workflow%/sequence.myLabel.txt	\
         			input.inputfile.value,input.label.value	file,label	console.log("file: " + file); console.log("label: " + label); if ( file == null || file == "") return; var suffix; if ( file.match(/(.[^.]{1,5})$/) ) suffix = file.match(/(.[^.]{1,5})$/)[1]; console.log("suffix: " + suffix); file = file.replace(/.[^.]{1,5}$/, ""); if ( label != null) file += "." + label; if ( suffix != null ) file += suffix; console.log("Returning file: " + file); return file;	1
aguatest	syoung	Project1	Workflow2	0	elandIndex	3	outputdir	1	0	input	outputdir	directory	--outputdir	Project1/Workflow2/downloads	required		Print indexed files to this directory	input.referencedir.value,input.outputdir.value,input.inputdir.value	referencedir,outputdir,inputdir	if ( referencedir != null && referencedir != "") return referencedir; if ( outputdir != null && outputdir != "") return outputdir; if ( inputdir != null && inputdir != "") return inputdir; 	1
aguatest	syoung	Project1	Workflow2	0	elandIndex	3	inputdir	0	0	input	inputdir	directory	--inputdir	Project1/Workflow2/downloads	essential		Location of directory containing *.fa files	input.referencedir.value,input.outputdir.value,input.inputdir.value	referencedir,outputdir,inputdir	if ( referencedir != null && referencedir != "") return referencedir; if ( outputdir != null && outputdir != "") return outputdir; if ( inputdir != null && inputdir != "") return inputdir; 	1
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	coverage	0	0	output	coverage	file		Project2/Workflow1/coverage.wig	Discretion		A UCSC BedGraph wigglegram track, showing the depth of coverage at each position, including the spliced read alignments.				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	cpus	0	0	input	cpus	integer	--cpus		optional		Max. number of cpus per job (1 to 4) (DEFAULT = 4)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	distance	0	0	input	distance	integer	--distance	200	required		The  mean inner distance between first read and its mate pair (corresponds to -r/--mate-inner-dist argument to Tophat)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	hits	0	0	output	hits	file		Project2/Workflow1/accepted_hits.sam	Discretion		A list of read alignments in SAM format. SAM is a compact short read alignment format that is increasingly being adopted.				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	inputfiles	0	0	input	inputfiles	file	--inputfiles	Project1/Workflow1/yoruba1-1.reads_1.1M.sequence.txt	required		Comma-separated *sequence.txt file names (e.g., s_1_1_sequence.txt,s_2_1_sequence.txt)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	jobs	0	0	input	jobs	integer	--jobs		optional		Max. number of concurrent cluster jobs (DEFAULT = 30)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	junctions	0	0	output	junctions	file		Project2/Workflow1/junctions.bed	Discretion		A UCSC BED track of junctions reported by TopHat. Each junction consists of two connected BED blocks, where each block is as long as the maximal overhang of any read spanning the junction. The score is the number of alignments spanning the junction.				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	label	0	0	input	label	string	--label	tophat	required		Name to used to submit jobs to cluster (e.g., tophat-sample1)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	matefiles	0	0	input	matefiles	file	--matefiles		optional		Comma-separated *sequence.txt mate file names (e.g., s_1_2_sequence.txt,s_2_2_sequence.txt) with locations as paths relative to the output directory				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	outputfile	0	0	output	outputfile	file		Project2/Workflow1/out.sam	Discretion	sam	SAM file containing				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	params	0	0	input	params	string	--params		optional		Additional parameters to be passed to tophat (e.g., --solexa1.3-quals				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	queue	0	0	input	queue	string	--queue		optional		Cluster queue options				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	reference	0	0	input	reference	file	--reference		required		Location of indexed reference file  (NB: Use file stub, e.g., /some/path/hg19)				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	keep	0	0	input	keep	flag	--keep	0	optional		Keep intermediate files				0
aguatest	syoung	Project2	Workflow1	0	TOPHAT	1	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow1/alignment	required		Create this directory and write output files to it				0
aguatest	aguatest	Project1	Workflow1	0	FTP	1	type	0	0	input	type	string	--type	html	essential		Type of page: html or text				0
aguatest	aguatest	Project1	Workflow1	0	FTP	1	url	0	0	input	url	string	--url	http://hgdownload.cse.ucsc.edu/goldenPath/hg19/chromosomes	required		Download files linked on this page				0
aguatest	aguatest	Project1	Workflow1	0	FTP	1	regex	0	0	input	regex	string	--regex	chr[XYM0-9]+.fa.gz	optional		Download files matching this regular expression				0
aguatest	aguatest	Project1	Workflow1	0	FTP	1	filter	0	0	input	filter	string	--filter		optional		Download only files containing this text fragment				0
aguatest	aguatest	ProjectY	Workflow2	0	novoIndex	3	inputdir	1	0	input	inputdir	directory	--inputdir	ProjectX/Workflow1	essential		Location of directory containing *.fa files	output.referencedir.value, input.outputdir.value, input.inputdir.value			0
aguatest	aguatest	ProjectY	Workflow2	0	novoIndex	3	outputdir	1	0	input	outputdir	directory	--outputdir		         		Print indexed files to this directory	output.referencedir.value, input.outputdir.value, input.inputdir.value			0
aguatest	aguatest	ProjectY	Workflow2	0	novoIndex	3	subdirs	1	0	input	subdirs	flag	--subdirs	1	optional			input.subdirs.value			0
aguatest	aguatest	ProjectY	Workflow2	0	FTP	1	filter	0	0	input	filter	string	--filter		optional		Download only files containing this text fragment				0
aguatest	aguatest	ProjectY	Workflow2	0	FTP	1	outputdir	0	0	input	outputdir	directory	--outputdir	ProjectY/Workflow2/downloads	required		Create this directory and download files to it				0
aguatest	aguatest	ProjectY	Workflow2	0	FTP	1	regex	0	0	input	regex	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Download files matching this regular expression				0
aguatest	aguatest	ProjectY	Workflow2	0	FTP	1	type	0	0	input	type	string	--type	html	essential		Type of page: html or text				0
aguatest	aguatest	ProjectY	Workflow2	0	FTP	1	url	0	0	input	url	string	--url	http://hgdownload.cse.ucsc.edu/goldenPath/hg19/chromosomes	required		Download files linked on this page				0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	delete	1	0	input	delete	flag	--delete	1	optional		Remove zipped files after unzipping				0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	filter	0	0	input	filter	string	--filter		optional		Unzip only files containing this text fragment				0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	inputdir	0	0	input	inputdir	directory	--inputdir	ProjectY/Workflow2	essential		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)	input.outputdir.value	InputParams		0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	outputdir	0	0	input	outputdir	directory	--outputdir	ProjectY/Workflow2	required		Unzip files to this directory	input.outputdir.value	InputParams		0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	regex	0	0	input	filter	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Unzip only files matching this regular expression	input.regex.value			0
aguatest	aguatest	ProjectY	Workflow2	0	unzipFiles	2	type	0	0	input	type	string	--type	gunzip	required		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)				0
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	delete	1	0	input	delete	flag	--delete	1	optional		Remove zipped files after unzipping				0
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	filter	0	0	input	filter	string	--filter		optional		Unzip only files containing this text fragment				0
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	inputdir	0	0	input	inputdir	directory	--inputdir	Project1/Workflow1/downloads	essential		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)	input.outputdir.value	InputParams		1
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	outputdir	0	0	input	outputdir	directory	--outputdir	Project1/Workflow1/downloads	required		Unzip files to this directory	input.outputdir.value	InputParams		1
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	regex	0	0	input	filter	string	--regex	\	chr[XYM0-9]+.fa.gz	optional		Unzip only files matching this regular expression	input.regex.value			1
aguatest	aguatest	Project1	Workflow1	0	unzipFiles	2	type	0	0	input	type	string	--type	gunzip	required		Name of unzip application (unzip|gunzip) (DEFAULT: gunzip)				0
